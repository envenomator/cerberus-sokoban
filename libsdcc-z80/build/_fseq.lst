                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.8.0 #10562 (Linux)
                              4 ;--------------------------------------------------------
                              5 	.module _fseq
                              6 	.optsdcc -mz80
                              7 	
                              8 ;--------------------------------------------------------
                              9 ; Public variables in this module
                             10 ;--------------------------------------------------------
                             11 	.globl ___fseq
                             12 ;--------------------------------------------------------
                             13 ; special function registers
                             14 ;--------------------------------------------------------
                             15 ;--------------------------------------------------------
                             16 ; ram data
                             17 ;--------------------------------------------------------
                             18 	.area _DATA
                             19 ;--------------------------------------------------------
                             20 ; ram data
                             21 ;--------------------------------------------------------
                             22 	.area _INITIALIZED
                             23 ;--------------------------------------------------------
                             24 ; absolute external ram data
                             25 ;--------------------------------------------------------
                             26 	.area _DABS (ABS)
                             27 ;--------------------------------------------------------
                             28 ; global & static initialisations
                             29 ;--------------------------------------------------------
                             30 	.area _HOME
                             31 	.area _GSINIT
                             32 	.area _GSFINAL
                             33 	.area _GSINIT
                             34 ;--------------------------------------------------------
                             35 ; Home
                             36 ;--------------------------------------------------------
                             37 	.area _HOME
                     0000    38 	G$__fseq$0$0	= .
                             39 	.globl	G$__fseq$0$0
                     0000    40 	C$_fseq.c$55$0_0$2	= .
                             41 	.globl	C$_fseq.c$55$0_0$2
                             42 ;_fseq.c:55: __fseq (float a1, float a2)
                             43 ;	---------------------------------
                             44 ; Function __fseq
                             45 ; ---------------------------------
   0000                      46 ___fseq::
   0000 DD E5         [15]   47 	push	ix
   0002 DD 21 00 00   [14]   48 	ld	ix,#0
   0006 DD 39         [15]   49 	add	ix,sp
   0008 21 F4 FF      [10]   50 	ld	hl, #-12
   000B 39            [11]   51 	add	hl, sp
   000C F9            [ 6]   52 	ld	sp, hl
                     000D    53 	C$_fseq.c$59$1_0$2	= .
                             54 	.globl	C$_fseq.c$59$1_0$2
                             55 ;_fseq.c:59: fl1.f = a1;
   000D 21 04 00      [10]   56 	ld	hl, #0x0004
   0010 39            [11]   57 	add	hl, sp
   0011 EB            [ 4]   58 	ex	de, hl
   0012 21 10 00      [10]   59 	ld	hl, #0x0010
   0015 39            [11]   60 	add	hl, sp
   0016 01 04 00      [10]   61 	ld	bc, #0x0004
   0019 ED B0         [21]   62 	ldir
                     001B    63 	C$_fseq.c$60$1_0$2	= .
                             64 	.globl	C$_fseq.c$60$1_0$2
                             65 ;_fseq.c:60: fl2.f = a2;
   001B 21 00 00      [10]   66 	ld	hl, #0x0000
   001E 39            [11]   67 	add	hl, sp
   001F EB            [ 4]   68 	ex	de, hl
   0020 21 14 00      [10]   69 	ld	hl, #0x0014
   0023 39            [11]   70 	add	hl, sp
   0024 01 04 00      [10]   71 	ld	bc, #0x0004
   0027 ED B0         [21]   72 	ldir
                     0029    73 	C$_fseq.c$62$1_0$2	= .
                             74 	.globl	C$_fseq.c$62$1_0$2
                             75 ;_fseq.c:62: if (fl1.l == fl2.l)
   0029 21 04 00      [10]   76 	ld	hl, #0x0004
   002C 39            [11]   77 	add	hl, sp
   002D EB            [ 4]   78 	ex	de, hl
   002E 21 08 00      [10]   79 	ld	hl, #0x0008
   0031 39            [11]   80 	add	hl, sp
   0032 EB            [ 4]   81 	ex	de, hl
   0033 01 04 00      [10]   82 	ld	bc, #0x0004
   0036 ED B0         [21]   83 	ldir
   0038 21 00 00      [10]   84 	ld	hl, #0x0000
   003B 39            [11]   85 	add	hl, sp
   003C 4E            [ 7]   86 	ld	c, (hl)
   003D 23            [ 6]   87 	inc	hl
   003E 46            [ 7]   88 	ld	b, (hl)
   003F 23            [ 6]   89 	inc	hl
   0040 5E            [ 7]   90 	ld	e, (hl)
   0041 23            [ 6]   91 	inc	hl
   0042 56            [ 7]   92 	ld	d, (hl)
   0043 DD 7E FC      [19]   93 	ld	a, -4 (ix)
   0046 91            [ 4]   94 	sub	a, c
   0047 20 16         [12]   95 	jr	NZ,00102$
   0049 DD 7E FD      [19]   96 	ld	a, -3 (ix)
   004C 90            [ 4]   97 	sub	a, b
   004D 20 10         [12]   98 	jr	NZ,00102$
   004F DD 7E FE      [19]   99 	ld	a, -2 (ix)
   0052 93            [ 4]  100 	sub	a, e
   0053 20 0A         [12]  101 	jr	NZ,00102$
   0055 DD 7E FF      [19]  102 	ld	a, -1 (ix)
   0058 92            [ 4]  103 	sub	a, d
   0059 20 04         [12]  104 	jr	NZ,00102$
                     005B   105 	C$_fseq.c$63$1_0$2	= .
                            106 	.globl	C$_fseq.c$63$1_0$2
                            107 ;_fseq.c:63: return (1);
   005B 2E 01         [ 7]  108 	ld	l, #0x01
   005D 18 37         [12]  109 	jr	00106$
   005F                     110 00102$:
                     005F   111 	C$_fseq.c$65$1_0$2	= .
                            112 	.globl	C$_fseq.c$65$1_0$2
                            113 ;_fseq.c:65: if ((fl1.l & 0x7fffffff) == 0 && (fl2.l & 0x7fffffff) == 0)
   005F 21 04 00      [10]  114 	ld	hl, #0x0004
   0062 39            [11]  115 	add	hl, sp
   0063 4E            [ 7]  116 	ld	c, (hl)
   0064 23            [ 6]  117 	inc	hl
   0065 46            [ 7]  118 	ld	b, (hl)
   0066 23            [ 6]  119 	inc	hl
   0067 23            [ 6]  120 	inc	hl
   0068 7E            [ 7]  121 	ld	a, (hl)
   0069 2B            [ 6]  122 	dec	hl
   006A 6E            [ 7]  123 	ld	l, (hl)
   006B 67            [ 4]  124 	ld	h, a
   006C 79            [ 4]  125 	ld	a, c
   006D B7            [ 4]  126 	or	a,a
   006E 20 24         [12]  127 	jr	NZ,00104$
   0070 B0            [ 4]  128 	or	a,b
   0071 20 21         [12]  129 	jr	NZ,00104$
   0073 BF            [ 4]  130 	cp	a, a
   0074 ED 6A         [15]  131 	adc	hl, hl
   0076 20 1C         [12]  132 	jr	NZ,00104$
   0078 21 00 00      [10]  133 	ld	hl, #0x0000
   007B 39            [11]  134 	add	hl, sp
   007C 4E            [ 7]  135 	ld	c, (hl)
   007D 23            [ 6]  136 	inc	hl
   007E 46            [ 7]  137 	ld	b, (hl)
   007F 23            [ 6]  138 	inc	hl
   0080 23            [ 6]  139 	inc	hl
   0081 7E            [ 7]  140 	ld	a, (hl)
   0082 2B            [ 6]  141 	dec	hl
   0083 6E            [ 7]  142 	ld	l, (hl)
   0084 67            [ 4]  143 	ld	h, a
   0085 79            [ 4]  144 	ld	a, c
   0086 B7            [ 4]  145 	or	a,a
   0087 20 0B         [12]  146 	jr	NZ,00104$
   0089 B0            [ 4]  147 	or	a,b
   008A 20 08         [12]  148 	jr	NZ,00104$
   008C BF            [ 4]  149 	cp	a, a
   008D ED 6A         [15]  150 	adc	hl, hl
                     008F   151 	C$_fseq.c$66$1_0$2	= .
                            152 	.globl	C$_fseq.c$66$1_0$2
                            153 ;_fseq.c:66: return (1);
                     008F   154 	C$_fseq.c$67$1_0$2	= .
                            155 	.globl	C$_fseq.c$67$1_0$2
                            156 ;_fseq.c:67: return (0);
   008F 20 03         [12]  157 	jr	NZ, 00104$
   0091 2E 01         [ 7]  158 	ld	l, #0x01
   0093 C2                  159 	.db	#0xc2
   0094                     160 00104$:
   0094 2E 00         [ 7]  161 	ld	l, #0x00
   0096                     162 00106$:
                     0096   163 	C$_fseq.c$68$1_0$2	= .
                            164 	.globl	C$_fseq.c$68$1_0$2
                            165 ;_fseq.c:68: }
   0096 DD F9         [10]  166 	ld	sp, ix
   0098 DD E1         [14]  167 	pop	ix
                     009A   168 	C$_fseq.c$68$1_0$2	= .
                            169 	.globl	C$_fseq.c$68$1_0$2
                     009A   170 	XG$__fseq$0$0	= .
                            171 	.globl	XG$__fseq$0$0
   009A C9            [10]  172 	ret
                            173 	.area _HOME
                            174 ;--------------------------------------------------------
                            175 ; code
                            176 ;--------------------------------------------------------
                            177 	.area _CODE
                            178 	.area _CODE
                            179 	.area _INITIALIZER
                            180 	.area _CABS (ABS)
