                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.8.0 #10562 (Linux)
                              4 ;--------------------------------------------------------
                              5 	.module _modulong
                              6 	.optsdcc -mz80
                              7 	
                              8 ;--------------------------------------------------------
                              9 ; Public variables in this module
                             10 ;--------------------------------------------------------
                             11 	.globl __modulong
                             12 ;--------------------------------------------------------
                             13 ; special function registers
                             14 ;--------------------------------------------------------
                             15 ;--------------------------------------------------------
                             16 ; ram data
                             17 ;--------------------------------------------------------
                             18 	.area _DATA
                             19 ;--------------------------------------------------------
                             20 ; ram data
                             21 ;--------------------------------------------------------
                             22 	.area _INITIALIZED
                             23 ;--------------------------------------------------------
                             24 ; absolute external ram data
                             25 ;--------------------------------------------------------
                             26 	.area _DABS (ABS)
                             27 ;--------------------------------------------------------
                             28 ; global & static initialisations
                             29 ;--------------------------------------------------------
                             30 	.area _HOME
                             31 	.area _GSINIT
                             32 	.area _GSFINAL
                             33 	.area _GSINIT
                             34 ;--------------------------------------------------------
                             35 ; Home
                             36 ;--------------------------------------------------------
                             37 	.area _HOME
                     0000    38 	G$_modulong$0$0	= .
                             39 	.globl	G$_modulong$0$0
                     0000    40 	C$_modulong.c$3$0_0$2	= .
                             41 	.globl	C$_modulong.c$3$0_0$2
                             42 ;_modulong.c:3: unsigned long _modulong (unsigned long a, unsigned long b)
                             43 ;	---------------------------------
                             44 ; Function _modulong
                             45 ; ---------------------------------
   0000                      46 __modulong::
   0000 DD E5         [15]   47 	push	ix
   0002 DD 21 00 00   [14]   48 	ld	ix,#0
   0006 DD 39         [15]   49 	add	ix,sp
                     0008    50 	C$_modulong.c$5$2_0$2	= .
                             51 	.globl	C$_modulong.c$5$2_0$2
                             52 ;_modulong.c:5: unsigned char count = 0;
                     0008    53 	C$_modulong.c$7$1_0$2	= .
                             54 	.globl	C$_modulong.c$7$1_0$2
                             55 ;_modulong.c:7: while (!MSB_SET(b))
   0008 01 00 00      [10]   56 	ld	bc, #0x0000
   000B                      57 00103$:
   000B DD 7E 0B      [19]   58 	ld	a, 11 (ix)
   000E CB 07         [ 8]   59 	rlc	a
   0010 E6 01         [ 7]   60 	and	a,#0x01
   0012 20 40         [12]   61 	jr	NZ,00117$
                     0014    62 	C$_modulong.c$9$2_0$3	= .
                             63 	.globl	C$_modulong.c$9$2_0$3
                             64 ;_modulong.c:9: b <<= 1;
   0014 DD CB 08 26   [23]   65 	sla	8 (ix)
   0018 DD CB 09 16   [23]   66 	rl	9 (ix)
   001C DD CB 0A 16   [23]   67 	rl	10 (ix)
   0020 DD CB 0B 16   [23]   68 	rl	11 (ix)
                     0024    69 	C$_modulong.c$10$2_0$3	= .
                             70 	.globl	C$_modulong.c$10$2_0$3
                             71 ;_modulong.c:10: if (b > a)
   0024 DD 7E 04      [19]   72 	ld	a, 4 (ix)
   0027 DD 96 08      [19]   73 	sub	a, 8 (ix)
   002A DD 7E 05      [19]   74 	ld	a, 5 (ix)
   002D DD 9E 09      [19]   75 	sbc	a, 9 (ix)
   0030 DD 7E 06      [19]   76 	ld	a, 6 (ix)
   0033 DD 9E 0A      [19]   77 	sbc	a, 10 (ix)
   0036 DD 7E 07      [19]   78 	ld	a, 7 (ix)
   0039 DD 9E 0B      [19]   79 	sbc	a, 11 (ix)
   003C 30 12         [12]   80 	jr	NC,00102$
                     003E    81 	C$_modulong.c$12$3_0$4	= .
                             82 	.globl	C$_modulong.c$12$3_0$4
                             83 ;_modulong.c:12: b >>=1;
   003E DD CB 0B 3E   [23]   84 	srl	11 (ix)
   0042 DD CB 0A 1E   [23]   85 	rr	10 (ix)
   0046 DD CB 09 1E   [23]   86 	rr	9 (ix)
   004A DD CB 08 1E   [23]   87 	rr	8 (ix)
                     004E    88 	C$_modulong.c$13$3_0$4	= .
                             89 	.globl	C$_modulong.c$13$3_0$4
                             90 ;_modulong.c:13: break;
   004E 18 04         [12]   91 	jr	00117$
   0050                      92 00102$:
                     0050    93 	C$_modulong.c$15$2_0$3	= .
                             94 	.globl	C$_modulong.c$15$2_0$3
                             95 ;_modulong.c:15: count++;
   0050 04            [ 4]   96 	inc	b
   0051 48            [ 4]   97 	ld	c, b
   0052 18 B7         [12]   98 	jr	00103$
                     0054    99 	C$_modulong.c$17$1_0$2	= .
                            100 	.globl	C$_modulong.c$17$1_0$2
                            101 ;_modulong.c:17: do
   0054                     102 00117$:
   0054                     103 00108$:
                     0054   104 	C$_modulong.c$19$2_0$5	= .
                            105 	.globl	C$_modulong.c$19$2_0$5
                            106 ;_modulong.c:19: if (a >= b)
   0054 DD 7E 04      [19]  107 	ld	a, 4 (ix)
   0057 DD 96 08      [19]  108 	sub	a, 8 (ix)
   005A DD 7E 05      [19]  109 	ld	a, 5 (ix)
   005D DD 9E 09      [19]  110 	sbc	a, 9 (ix)
   0060 DD 7E 06      [19]  111 	ld	a, 6 (ix)
   0063 DD 9E 0A      [19]  112 	sbc	a, 10 (ix)
   0066 DD 7E 07      [19]  113 	ld	a, 7 (ix)
   0069 DD 9E 0B      [19]  114 	sbc	a, 11 (ix)
   006C 38 24         [12]  115 	jr	C,00107$
                     006E   116 	C$_modulong.c$20$2_0$5	= .
                            117 	.globl	C$_modulong.c$20$2_0$5
                            118 ;_modulong.c:20: a -= b;
   006E DD 7E 04      [19]  119 	ld	a, 4 (ix)
   0071 DD 96 08      [19]  120 	sub	a, 8 (ix)
   0074 DD 77 04      [19]  121 	ld	4 (ix), a
   0077 DD 7E 05      [19]  122 	ld	a, 5 (ix)
   007A DD 9E 09      [19]  123 	sbc	a, 9 (ix)
   007D DD 77 05      [19]  124 	ld	5 (ix), a
   0080 DD 7E 06      [19]  125 	ld	a, 6 (ix)
   0083 DD 9E 0A      [19]  126 	sbc	a, 10 (ix)
   0086 DD 77 06      [19]  127 	ld	6 (ix), a
   0089 DD 7E 07      [19]  128 	ld	a, 7 (ix)
   008C DD 9E 0B      [19]  129 	sbc	a, 11 (ix)
   008F DD 77 07      [19]  130 	ld	7 (ix), a
   0092                     131 00107$:
                     0092   132 	C$_modulong.c$21$2_0$5	= .
                            133 	.globl	C$_modulong.c$21$2_0$5
                            134 ;_modulong.c:21: b >>= 1;
   0092 DD CB 0B 3E   [23]  135 	srl	11 (ix)
   0096 DD CB 0A 1E   [23]  136 	rr	10 (ix)
   009A DD CB 09 1E   [23]  137 	rr	9 (ix)
   009E DD CB 08 1E   [23]  138 	rr	8 (ix)
                     00A2   139 	C$_modulong.c$23$1_0$2	= .
                            140 	.globl	C$_modulong.c$23$1_0$2
                            141 ;_modulong.c:23: while (count--);
   00A2 79            [ 4]  142 	ld	a, c
   00A3 0D            [ 4]  143 	dec	c
   00A4 B7            [ 4]  144 	or	a, a
   00A5 20 AD         [12]  145 	jr	NZ,00108$
                     00A7   146 	C$_modulong.c$25$1_0$2	= .
                            147 	.globl	C$_modulong.c$25$1_0$2
                            148 ;_modulong.c:25: return a;
   00A7 DD 6E 04      [19]  149 	ld	l, 4 (ix)
   00AA DD 66 05      [19]  150 	ld	h, 5 (ix)
   00AD DD 5E 06      [19]  151 	ld	e, 6 (ix)
   00B0 DD 56 07      [19]  152 	ld	d, 7 (ix)
                     00B3   153 	C$_modulong.c$26$1_0$2	= .
                            154 	.globl	C$_modulong.c$26$1_0$2
                            155 ;_modulong.c:26: }
   00B3 DD E1         [14]  156 	pop	ix
                     00B5   157 	C$_modulong.c$26$1_0$2	= .
                            158 	.globl	C$_modulong.c$26$1_0$2
                     00B5   159 	XG$_modulong$0$0	= .
                            160 	.globl	XG$_modulong$0$0
   00B5 C9            [10]  161 	ret
                            162 	.area _HOME
                            163 ;--------------------------------------------------------
                            164 ; code
                            165 ;--------------------------------------------------------
                            166 	.area _CODE
                            167 	.area _CODE
                            168 	.area _INITIALIZER
                            169 	.area _CABS (ABS)
