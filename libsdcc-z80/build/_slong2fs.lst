                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.8.0 #10562 (Linux)
                              4 ;--------------------------------------------------------
                              5 	.module _slong2fs
                              6 	.optsdcc -mz80
                              7 	
                              8 ;--------------------------------------------------------
                              9 ; Public variables in this module
                             10 ;--------------------------------------------------------
                             11 	.globl ___ulong2fs
                             12 	.globl ___slong2fs
                             13 ;--------------------------------------------------------
                             14 ; special function registers
                             15 ;--------------------------------------------------------
                             16 ;--------------------------------------------------------
                             17 ; ram data
                             18 ;--------------------------------------------------------
                             19 	.area _DATA
                             20 ;--------------------------------------------------------
                             21 ; ram data
                             22 ;--------------------------------------------------------
                             23 	.area _INITIALIZED
                             24 ;--------------------------------------------------------
                             25 ; absolute external ram data
                             26 ;--------------------------------------------------------
                             27 	.area _DABS (ABS)
                             28 ;--------------------------------------------------------
                             29 ; global & static initialisations
                             30 ;--------------------------------------------------------
                             31 	.area _HOME
                             32 	.area _GSINIT
                             33 	.area _GSFINAL
                             34 	.area _GSINIT
                             35 ;--------------------------------------------------------
                             36 ; Home
                             37 ;--------------------------------------------------------
                             38 	.area _HOME
                     0000    39 	G$__slong2fs$0$0	= .
                             40 	.globl	G$__slong2fs$0$0
                     0000    41 	C$_slong2fs.c$34$0_0$21	= .
                             42 	.globl	C$_slong2fs.c$34$0_0$21
                             43 ;_slong2fs.c:34: float __slong2fs (signed long sl) {
                             44 ;	---------------------------------
                             45 ; Function __slong2fs
                             46 ; ---------------------------------
   0000                      47 ___slong2fs::
   0000 DD E5         [15]   48 	push	ix
   0002 DD 21 00 00   [14]   49 	ld	ix,#0
   0006 DD 39         [15]   50 	add	ix,sp
                     0008    51 	C$_slong2fs.c$35$1_0$21	= .
                             52 	.globl	C$_slong2fs.c$35$1_0$21
                             53 ;_slong2fs.c:35: if (sl<0) 
   0008 DD CB 07 7E   [20]   54 	bit	7, 7 (ix)
   000C 28 24         [12]   55 	jr	Z,00102$
                     000E    56 	C$_slong2fs.c$36$1_0$21	= .
                             57 	.globl	C$_slong2fs.c$36$1_0$21
                             58 ;_slong2fs.c:36: return -__ulong2fs(-sl);
   000E AF            [ 4]   59 	xor	a, a
   000F DD 96 04      [19]   60 	sub	a, 4 (ix)
   0012 4F            [ 4]   61 	ld	c, a
   0013 3E 00         [ 7]   62 	ld	a, #0x00
   0015 DD 9E 05      [19]   63 	sbc	a, 5 (ix)
   0018 47            [ 4]   64 	ld	b, a
   0019 3E 00         [ 7]   65 	ld	a, #0x00
   001B DD 9E 06      [19]   66 	sbc	a, 6 (ix)
   001E 5F            [ 4]   67 	ld	e, a
   001F 3E 00         [ 7]   68 	ld	a, #0x00
   0021 DD 9E 07      [19]   69 	sbc	a, 7 (ix)
   0024 57            [ 4]   70 	ld	d, a
   0025 D5            [11]   71 	push	de
   0026 C5            [11]   72 	push	bc
   0027 CDr00r00      [17]   73 	call	___ulong2fs
   002A F1            [10]   74 	pop	af
   002B F1            [10]   75 	pop	af
   002C 7A            [ 4]   76 	ld	a, d
   002D EE 80         [ 7]   77 	xor	a,#0x80
   002F 57            [ 4]   78 	ld	d, a
   0030 18 13         [12]   79 	jr	00104$
   0032                      80 00102$:
                     0032    81 	C$_slong2fs.c$38$1_0$21	= .
                             82 	.globl	C$_slong2fs.c$38$1_0$21
                             83 ;_slong2fs.c:38: return __ulong2fs(sl);
   0032 DD 6E 06      [19]   84 	ld	l, 6 (ix)
   0035 DD 66 07      [19]   85 	ld	h, 7 (ix)
   0038 E5            [11]   86 	push	hl
   0039 DD 6E 04      [19]   87 	ld	l, 4 (ix)
   003C DD 66 05      [19]   88 	ld	h, 5 (ix)
   003F E5            [11]   89 	push	hl
   0040 CDr00r00      [17]   90 	call	___ulong2fs
   0043 F1            [10]   91 	pop	af
   0044 F1            [10]   92 	pop	af
   0045                      93 00104$:
                     0045    94 	C$_slong2fs.c$39$1_0$21	= .
                             95 	.globl	C$_slong2fs.c$39$1_0$21
                             96 ;_slong2fs.c:39: }
   0045 DD E1         [14]   97 	pop	ix
                     0047    98 	C$_slong2fs.c$39$1_0$21	= .
                             99 	.globl	C$_slong2fs.c$39$1_0$21
                     0047   100 	XG$__slong2fs$0$0	= .
                            101 	.globl	XG$__slong2fs$0$0
   0047 C9            [10]  102 	ret
                            103 	.area _HOME
                            104 ;--------------------------------------------------------
                            105 ; code
                            106 ;--------------------------------------------------------
                            107 	.area _CODE
                            108 	.area _CODE
                            109 	.area _INITIALIZER
                            110 	.area _CABS (ABS)
