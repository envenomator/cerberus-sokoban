                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.8.0 #10562 (Linux)
                              4 ;--------------------------------------------------------
                              5 	.module _modslong
                              6 	.optsdcc -mz80
                              7 	
                              8 ;--------------------------------------------------------
                              9 ; Public variables in this module
                             10 ;--------------------------------------------------------
                             11 	.globl __modslong
                             12 ;--------------------------------------------------------
                             13 ; special function registers
                             14 ;--------------------------------------------------------
                             15 ;--------------------------------------------------------
                             16 ; ram data
                             17 ;--------------------------------------------------------
                             18 	.area _DATA
                             19 ;--------------------------------------------------------
                             20 ; ram data
                             21 ;--------------------------------------------------------
                             22 	.area _INITIALIZED
                             23 ;--------------------------------------------------------
                             24 ; absolute external ram data
                             25 ;--------------------------------------------------------
                             26 	.area _DABS (ABS)
                             27 ;--------------------------------------------------------
                             28 ; global & static initialisations
                             29 ;--------------------------------------------------------
                             30 	.area _HOME
                             31 	.area _GSINIT
                             32 	.area _GSFINAL
                             33 	.area _GSINIT
                             34 ;--------------------------------------------------------
                             35 ; Home
                             36 ;--------------------------------------------------------
                             37 	.area _HOME
                     0000    38 	G$_modslong$0$0	= .
                             39 	.globl	G$_modslong$0$0
                     0000    40 	C$_modslong.c$2$0_0$2	= .
                             41 	.globl	C$_modslong.c$2$0_0$2
                             42 ;_modslong.c:2: _modslong (long a, long b)
                             43 ;	---------------------------------
                             44 ; Function _modslong
                             45 ; ---------------------------------
   0000                      46 __modslong::
   0000 DD E5         [15]   47 	push	ix
   0002 DD 21 00 00   [14]   48 	ld	ix,#0
   0006 DD 39         [15]   49 	add	ix,sp
   0008 F5            [11]   50 	push	af
   0009 F5            [11]   51 	push	af
   000A 3B            [ 6]   52 	dec	sp
                     000B    53 	C$_modslong.c$6$1_0$2	= .
                             54 	.globl	C$_modslong.c$6$1_0$2
                             55 ;_modslong.c:6: r = (unsigned long)(a < 0 ? -a : a) % (unsigned long)(b < 0 ? -b : b);
   000B DD 7E 07      [19]   56 	ld	a, 7 (ix)
   000E 07            [ 4]   57 	rlca
   000F E6 01         [ 7]   58 	and	a,#0x01
   0011 DD 77 FF      [19]   59 	ld	-1 (ix), a
   0014 B7            [ 4]   60 	or	a, a
   0015 28 19         [12]   61 	jr	Z,00106$
   0017 AF            [ 4]   62 	xor	a, a
   0018 DD 96 04      [19]   63 	sub	a, 4 (ix)
   001B 4F            [ 4]   64 	ld	c, a
   001C 3E 00         [ 7]   65 	ld	a, #0x00
   001E DD 9E 05      [19]   66 	sbc	a, 5 (ix)
   0021 47            [ 4]   67 	ld	b, a
   0022 3E 00         [ 7]   68 	ld	a, #0x00
   0024 DD 9E 06      [19]   69 	sbc	a, 6 (ix)
   0027 5F            [ 4]   70 	ld	e, a
   0028 3E 00         [ 7]   71 	ld	a, #0x00
   002A DD 9E 07      [19]   72 	sbc	a, 7 (ix)
   002D 57            [ 4]   73 	ld	d, a
   002E 18 0C         [12]   74 	jr	00107$
   0030                      75 00106$:
   0030 DD 4E 04      [19]   76 	ld	c, 4 (ix)
   0033 DD 46 05      [19]   77 	ld	b, 5 (ix)
   0036 DD 5E 06      [19]   78 	ld	e, 6 (ix)
   0039 DD 56 07      [19]   79 	ld	d, 7 (ix)
   003C                      80 00107$:
   003C DD 71 FB      [19]   81 	ld	-5 (ix), c
   003F DD 70 FC      [19]   82 	ld	-4 (ix), b
   0042 DD 73 FD      [19]   83 	ld	-3 (ix), e
   0045 DD 72 FE      [19]   84 	ld	-2 (ix), d
   0048 DD CB 0B 7E   [20]   85 	bit	7, 11 (ix)
   004C 28 19         [12]   86 	jr	Z,00108$
   004E AF            [ 4]   87 	xor	a, a
   004F DD 96 08      [19]   88 	sub	a, 8 (ix)
   0052 4F            [ 4]   89 	ld	c, a
   0053 3E 00         [ 7]   90 	ld	a, #0x00
   0055 DD 9E 09      [19]   91 	sbc	a, 9 (ix)
   0058 47            [ 4]   92 	ld	b, a
   0059 3E 00         [ 7]   93 	ld	a, #0x00
   005B DD 9E 0A      [19]   94 	sbc	a, 10 (ix)
   005E 5F            [ 4]   95 	ld	e, a
   005F 3E 00         [ 7]   96 	ld	a, #0x00
   0061 DD 9E 0B      [19]   97 	sbc	a, 11 (ix)
   0064 57            [ 4]   98 	ld	d, a
   0065 18 0C         [12]   99 	jr	00109$
   0067                     100 00108$:
   0067 DD 4E 08      [19]  101 	ld	c, 8 (ix)
   006A DD 46 09      [19]  102 	ld	b, 9 (ix)
   006D DD 5E 0A      [19]  103 	ld	e, 10 (ix)
   0070 DD 56 0B      [19]  104 	ld	d, 11 (ix)
   0073                     105 00109$:
   0073 D5            [11]  106 	push	de
   0074 C5            [11]  107 	push	bc
   0075 DD 6E FD      [19]  108 	ld	l, -3 (ix)
   0078 DD 66 FE      [19]  109 	ld	h, -2 (ix)
   007B E5            [11]  110 	push	hl
   007C DD 6E FB      [19]  111 	ld	l, -5 (ix)
   007F DD 66 FC      [19]  112 	ld	h, -4 (ix)
   0082 E5            [11]  113 	push	hl
   0083 CDr00r00      [17]  114 	call	__modulong
   0086 F1            [10]  115 	pop	af
   0087 F1            [10]  116 	pop	af
   0088 F1            [10]  117 	pop	af
   0089 F1            [10]  118 	pop	af
                     008A   119 	C$_modslong.c$8$1_0$2	= .
                            120 	.globl	C$_modslong.c$8$1_0$2
                            121 ;_modslong.c:8: if (a < 0)
   008A DD 7E FF      [19]  122 	ld	a, -1 (ix)
   008D B7            [ 4]  123 	or	a, a
   008E 28 0F         [12]  124 	jr	Z,00102$
                     0090   125 	C$_modslong.c$9$1_0$2	= .
                            126 	.globl	C$_modslong.c$9$1_0$2
                            127 ;_modslong.c:9: return -r;
   0090 AF            [ 4]  128 	xor	a, a
   0091 95            [ 4]  129 	sub	a, l
   0092 6F            [ 4]  130 	ld	l, a
   0093 3E 00         [ 7]  131 	ld	a, #0x00
   0095 9C            [ 4]  132 	sbc	a, h
   0096 67            [ 4]  133 	ld	h, a
   0097 3E 00         [ 7]  134 	ld	a, #0x00
   0099 9B            [ 4]  135 	sbc	a, e
   009A 5F            [ 4]  136 	ld	e, a
   009B 3E 00         [ 7]  137 	ld	a, #0x00
   009D 9A            [ 4]  138 	sbc	a, d
   009E 57            [ 4]  139 	ld	d, a
                     009F   140 	C$_modslong.c$11$1_0$2	= .
                            141 	.globl	C$_modslong.c$11$1_0$2
                            142 ;_modslong.c:11: return r;
   009F                     143 00102$:
                     009F   144 	C$_modslong.c$12$1_0$2	= .
                            145 	.globl	C$_modslong.c$12$1_0$2
                            146 ;_modslong.c:12: }
   009F DD F9         [10]  147 	ld	sp, ix
   00A1 DD E1         [14]  148 	pop	ix
                     00A3   149 	C$_modslong.c$12$1_0$2	= .
                            150 	.globl	C$_modslong.c$12$1_0$2
                     00A3   151 	XG$_modslong$0$0	= .
                            152 	.globl	XG$_modslong$0$0
   00A3 C9            [10]  153 	ret
                            154 	.area _HOME
                            155 ;--------------------------------------------------------
                            156 ; code
                            157 ;--------------------------------------------------------
                            158 	.area _CODE
                            159 	.area _CODE
                            160 	.area _INITIALIZER
                            161 	.area _CABS (ABS)
