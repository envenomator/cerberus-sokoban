                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.8.0 #10562 (Linux)
                              4 ;--------------------------------------------------------
                              5 	.module _fsneq
                              6 	.optsdcc -mz80
                              7 	
                              8 ;--------------------------------------------------------
                              9 ; Public variables in this module
                             10 ;--------------------------------------------------------
                             11 	.globl ___fsneq
                             12 ;--------------------------------------------------------
                             13 ; special function registers
                             14 ;--------------------------------------------------------
                             15 ;--------------------------------------------------------
                             16 ; ram data
                             17 ;--------------------------------------------------------
                             18 	.area _DATA
                             19 ;--------------------------------------------------------
                             20 ; ram data
                             21 ;--------------------------------------------------------
                             22 	.area _INITIALIZED
                             23 ;--------------------------------------------------------
                             24 ; absolute external ram data
                             25 ;--------------------------------------------------------
                             26 	.area _DABS (ABS)
                             27 ;--------------------------------------------------------
                             28 ; global & static initialisations
                             29 ;--------------------------------------------------------
                             30 	.area _HOME
                             31 	.area _GSINIT
                             32 	.area _GSFINAL
                             33 	.area _GSINIT
                             34 ;--------------------------------------------------------
                             35 ; Home
                             36 ;--------------------------------------------------------
                             37 	.area _HOME
                     0000    38 	G$__fsneq$0$0	= .
                             39 	.globl	G$__fsneq$0$0
                     0000    40 	C$_fsneq.c$54$0_0$2	= .
                             41 	.globl	C$_fsneq.c$54$0_0$2
                             42 ;_fsneq.c:54: char __fsneq (float a1, float a2)
                             43 ;	---------------------------------
                             44 ; Function __fsneq
                             45 ; ---------------------------------
   0000                      46 ___fsneq::
   0000 DD E5         [15]   47 	push	ix
   0002 DD 21 00 00   [14]   48 	ld	ix,#0
   0006 DD 39         [15]   49 	add	ix,sp
   0008 21 F4 FF      [10]   50 	ld	hl, #-12
   000B 39            [11]   51 	add	hl, sp
   000C F9            [ 6]   52 	ld	sp, hl
                     000D    53 	C$_fsneq.c$58$1_0$2	= .
                             54 	.globl	C$_fsneq.c$58$1_0$2
                             55 ;_fsneq.c:58: fl1.f = a1;
   000D 21 04 00      [10]   56 	ld	hl, #0x0004
   0010 39            [11]   57 	add	hl, sp
   0011 EB            [ 4]   58 	ex	de, hl
   0012 21 10 00      [10]   59 	ld	hl, #0x0010
   0015 39            [11]   60 	add	hl, sp
   0016 01 04 00      [10]   61 	ld	bc, #0x0004
   0019 ED B0         [21]   62 	ldir
                     001B    63 	C$_fsneq.c$59$1_0$2	= .
                             64 	.globl	C$_fsneq.c$59$1_0$2
                             65 ;_fsneq.c:59: fl2.f = a2;
   001B 21 00 00      [10]   66 	ld	hl, #0x0000
   001E 39            [11]   67 	add	hl, sp
   001F EB            [ 4]   68 	ex	de, hl
   0020 21 14 00      [10]   69 	ld	hl, #0x0014
   0023 39            [11]   70 	add	hl, sp
   0024 01 04 00      [10]   71 	ld	bc, #0x0004
   0027 ED B0         [21]   72 	ldir
                     0029    73 	C$_fsneq.c$61$1_0$2	= .
                             74 	.globl	C$_fsneq.c$61$1_0$2
                             75 ;_fsneq.c:61: if (fl1.l == fl2.l)
   0029 21 04 00      [10]   76 	ld	hl, #0x0004
   002C 39            [11]   77 	add	hl, sp
   002D EB            [ 4]   78 	ex	de, hl
   002E 21 08 00      [10]   79 	ld	hl, #0x0008
   0031 39            [11]   80 	add	hl, sp
   0032 EB            [ 4]   81 	ex	de, hl
   0033 01 04 00      [10]   82 	ld	bc, #0x0004
   0036 ED B0         [21]   83 	ldir
   0038 21 00 00      [10]   84 	ld	hl, #0x0000
   003B 39            [11]   85 	add	hl, sp
   003C 4E            [ 7]   86 	ld	c, (hl)
   003D 23            [ 6]   87 	inc	hl
   003E 46            [ 7]   88 	ld	b, (hl)
   003F 23            [ 6]   89 	inc	hl
   0040 5E            [ 7]   90 	ld	e, (hl)
   0041 23            [ 6]   91 	inc	hl
   0042 56            [ 7]   92 	ld	d, (hl)
   0043 DD 7E FC      [19]   93 	ld	a, -4 (ix)
   0046 91            [ 4]   94 	sub	a, c
   0047 20 15         [12]   95 	jr	NZ,00102$
   0049 DD 7E FD      [19]   96 	ld	a, -3 (ix)
   004C 90            [ 4]   97 	sub	a, b
   004D 20 0F         [12]   98 	jr	NZ,00102$
   004F DD 7E FE      [19]   99 	ld	a, -2 (ix)
   0052 93            [ 4]  100 	sub	a, e
   0053 20 09         [12]  101 	jr	NZ,00102$
   0055 DD 7E FF      [19]  102 	ld	a, -1 (ix)
                     0058   103 	C$_fsneq.c$62$1_0$2	= .
                            104 	.globl	C$_fsneq.c$62$1_0$2
                            105 ;_fsneq.c:62: return (0);
   0058 92            [ 4]  106 	sub	a,d
   0059 20 03         [12]  107 	jr	NZ,00102$
   005B 6F            [ 4]  108 	ld	l,a
   005C 18 3F         [12]  109 	jr	00105$
   005E                     110 00102$:
                     005E   111 	C$_fsneq.c$63$1_0$2	= .
                            112 	.globl	C$_fsneq.c$63$1_0$2
                            113 ;_fsneq.c:63: if (((fl1.l | fl2.l) & 0x7FFFFFFF) == 0)
   005E 21 04 00      [10]  114 	ld	hl, #0x0004
   0061 39            [11]  115 	add	hl, sp
   0062 EB            [ 4]  116 	ex	de, hl
   0063 21 08 00      [10]  117 	ld	hl, #0x0008
   0066 39            [11]  118 	add	hl, sp
   0067 EB            [ 4]  119 	ex	de, hl
   0068 01 04 00      [10]  120 	ld	bc, #0x0004
   006B ED B0         [21]  121 	ldir
   006D 21 00 00      [10]  122 	ld	hl, #0x0000
   0070 39            [11]  123 	add	hl, sp
   0071 4E            [ 7]  124 	ld	c, (hl)
   0072 23            [ 6]  125 	inc	hl
   0073 46            [ 7]  126 	ld	b, (hl)
   0074 23            [ 6]  127 	inc	hl
   0075 5E            [ 7]  128 	ld	e, (hl)
   0076 23            [ 6]  129 	inc	hl
   0077 56            [ 7]  130 	ld	d, (hl)
   0078 DD 7E FC      [19]  131 	ld	a, -4 (ix)
   007B B1            [ 4]  132 	or	a, c
   007C 4F            [ 4]  133 	ld	c, a
   007D DD 7E FD      [19]  134 	ld	a, -3 (ix)
   0080 B0            [ 4]  135 	or	a, b
   0081 47            [ 4]  136 	ld	b, a
   0082 DD 7E FE      [19]  137 	ld	a, -2 (ix)
   0085 B3            [ 4]  138 	or	a, e
   0086 6F            [ 4]  139 	ld	l, a
   0087 DD 7E FF      [19]  140 	ld	a, -1 (ix)
   008A B2            [ 4]  141 	or	a, d
   008B 67            [ 4]  142 	ld	h, a
   008C 79            [ 4]  143 	ld	a, c
   008D B7            [ 4]  144 	or	a,a
   008E 20 0B         [12]  145 	jr	NZ,00104$
   0090 B0            [ 4]  146 	or	a,b
   0091 20 08         [12]  147 	jr	NZ,00104$
   0093 BF            [ 4]  148 	cp	a, a
   0094 ED 6A         [15]  149 	adc	hl, hl
                     0096   150 	C$_fsneq.c$64$1_0$2	= .
                            151 	.globl	C$_fsneq.c$64$1_0$2
                            152 ;_fsneq.c:64: return (0);
                     0096   153 	C$_fsneq.c$65$1_0$2	= .
                            154 	.globl	C$_fsneq.c$65$1_0$2
                            155 ;_fsneq.c:65: return (1);
   0096 20 03         [12]  156 	jr	NZ, 00104$
   0098 2E 00         [ 7]  157 	ld	l, #0x00
   009A C2                  158 	.db	#0xc2
   009B                     159 00104$:
   009B 2E 01         [ 7]  160 	ld	l, #0x01
   009D                     161 00105$:
                     009D   162 	C$_fsneq.c$66$1_0$2	= .
                            163 	.globl	C$_fsneq.c$66$1_0$2
                            164 ;_fsneq.c:66: }
   009D DD F9         [10]  165 	ld	sp, ix
   009F DD E1         [14]  166 	pop	ix
                     00A1   167 	C$_fsneq.c$66$1_0$2	= .
                            168 	.globl	C$_fsneq.c$66$1_0$2
                     00A1   169 	XG$__fsneq$0$0	= .
                            170 	.globl	XG$__fsneq$0$0
   00A1 C9            [10]  171 	ret
                            172 	.area _HOME
                            173 ;--------------------------------------------------------
                            174 ; code
                            175 ;--------------------------------------------------------
                            176 	.area _CODE
                            177 	.area _CODE
                            178 	.area _INITIALIZER
                            179 	.area _CABS (ABS)
