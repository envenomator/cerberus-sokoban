                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.8.0 #10562 (Linux)
                              4 ;--------------------------------------------------------
                              5 	.module _fs2slong
                              6 	.optsdcc -mz80
                              7 	
                              8 ;--------------------------------------------------------
                              9 ; Public variables in this module
                             10 ;--------------------------------------------------------
                             11 	.globl ___fs2ulong
                             12 	.globl ___fs2slong
                             13 ;--------------------------------------------------------
                             14 ; special function registers
                             15 ;--------------------------------------------------------
                             16 ;--------------------------------------------------------
                             17 ; ram data
                             18 ;--------------------------------------------------------
                             19 	.area _DATA
                             20 ;--------------------------------------------------------
                             21 ; ram data
                             22 ;--------------------------------------------------------
                             23 	.area _INITIALIZED
                             24 ;--------------------------------------------------------
                             25 ; absolute external ram data
                             26 ;--------------------------------------------------------
                             27 	.area _DABS (ABS)
                             28 ;--------------------------------------------------------
                             29 ; global & static initialisations
                             30 ;--------------------------------------------------------
                             31 	.area _HOME
                             32 	.area _GSINIT
                             33 	.area _GSFINAL
                             34 	.area _GSINIT
                             35 ;--------------------------------------------------------
                             36 ; Home
                             37 ;--------------------------------------------------------
                             38 	.area _HOME
                     0000    39 	G$__fs2slong$0$0	= .
                             40 	.globl	G$__fs2slong$0$0
                     0000    41 	C$_fs2slong.c$34$0_0$21	= .
                             42 	.globl	C$_fs2slong.c$34$0_0$21
                             43 ;_fs2slong.c:34: signed long __fs2slong (float f)
                             44 ;	---------------------------------
                             45 ; Function __fs2slong
                             46 ; ---------------------------------
   0000                      47 ___fs2slong::
   0000 DD E5         [15]   48 	push	ix
   0002 DD 21 00 00   [14]   49 	ld	ix,#0
   0006 DD 39         [15]   50 	add	ix,sp
                     0008    51 	C$_fs2slong.c$37$1_0$21	= .
                             52 	.globl	C$_fs2slong.c$37$1_0$21
                             53 ;_fs2slong.c:37: if (!f)
   0008 DD 7E 07      [19]   54 	ld	a, 7 (ix)
   000B CB BF         [ 8]   55 	res	7, a
   000D DD B6 06      [19]   56 	or	a, 6 (ix)
   0010 DD B6 05      [19]   57 	or	a, 5 (ix)
   0013 DD B6 04      [19]   58 	or	a, 4 (ix)
   0016 20 07         [12]   59 	jr	NZ,00102$
                     0018    60 	C$_fs2slong.c$38$1_0$21	= .
                             61 	.globl	C$_fs2slong.c$38$1_0$21
                             62 ;_fs2slong.c:38: return 0;
   0018 21 00 00      [10]   63 	ld	hl,#0x0000
   001B 5D            [ 4]   64 	ld	e,l
   001C 54            [ 4]   65 	ld	d,h
   001D 18 5B         [12]   66 	jr	00106$
   001F                      67 00102$:
                     001F    68 	C$_fs2slong.c$40$1_0$21	= .
                             69 	.globl	C$_fs2slong.c$40$1_0$21
                             70 ;_fs2slong.c:40: if (f<0) {
   001F 21 00 00      [10]   71 	ld	hl, #0x0000
   0022 E5            [11]   72 	push	hl
   0023 21 00 00      [10]   73 	ld	hl, #0x0000
   0026 E5            [11]   74 	push	hl
   0027 DD 6E 06      [19]   75 	ld	l, 6 (ix)
   002A DD 66 07      [19]   76 	ld	h, 7 (ix)
   002D E5            [11]   77 	push	hl
   002E DD 6E 04      [19]   78 	ld	l, 4 (ix)
   0031 DD 66 05      [19]   79 	ld	h, 5 (ix)
   0034 E5            [11]   80 	push	hl
   0035 CDr00r00      [17]   81 	call	___fslt
   0038 F1            [10]   82 	pop	af
   0039 F1            [10]   83 	pop	af
   003A F1            [10]   84 	pop	af
   003B F1            [10]   85 	pop	af
   003C 7D            [ 4]   86 	ld	a, l
   003D B7            [ 4]   87 	or	a, a
   003E 28 27         [12]   88 	jr	Z,00104$
                     0040    89 	C$_fs2slong.c$41$2_0$22	= .
                             90 	.globl	C$_fs2slong.c$41$2_0$22
                             91 ;_fs2slong.c:41: return -__fs2ulong(-f);
   0040 DD 7E 07      [19]   92 	ld	a, 7 (ix)
   0043 EE 80         [ 7]   93 	xor	a,#0x80
   0045 57            [ 4]   94 	ld	d, a
   0046 DD 4E 04      [19]   95 	ld	c, 4 (ix)
   0049 DD 46 05      [19]   96 	ld	b, 5 (ix)
   004C DD 5E 06      [19]   97 	ld	e, 6 (ix)
   004F D5            [11]   98 	push	de
   0050 C5            [11]   99 	push	bc
   0051 CDr00r00      [17]  100 	call	___fs2ulong
   0054 F1            [10]  101 	pop	af
   0055 F1            [10]  102 	pop	af
   0056 4B            [ 4]  103 	ld	c, e
   0057 42            [ 4]  104 	ld	b, d
   0058 AF            [ 4]  105 	xor	a, a
   0059 95            [ 4]  106 	sub	a, l
   005A 5F            [ 4]  107 	ld	e, a
   005B 3E 00         [ 7]  108 	ld	a, #0x00
   005D 9C            [ 4]  109 	sbc	a, h
   005E 57            [ 4]  110 	ld	d, a
   005F 21 00 00      [10]  111 	ld	hl, #0x0000
   0062 ED 42         [15]  112 	sbc	hl, bc
   0064 EB            [ 4]  113 	ex	de, hl
   0065 18 13         [12]  114 	jr	00106$
   0067                     115 00104$:
                     0067   116 	C$_fs2slong.c$43$2_0$23	= .
                            117 	.globl	C$_fs2slong.c$43$2_0$23
                            118 ;_fs2slong.c:43: return __fs2ulong(f);
   0067 DD 6E 06      [19]  119 	ld	l, 6 (ix)
   006A DD 66 07      [19]  120 	ld	h, 7 (ix)
   006D E5            [11]  121 	push	hl
   006E DD 6E 04      [19]  122 	ld	l, 4 (ix)
   0071 DD 66 05      [19]  123 	ld	h, 5 (ix)
   0074 E5            [11]  124 	push	hl
   0075 CDr00r00      [17]  125 	call	___fs2ulong
   0078 F1            [10]  126 	pop	af
   0079 F1            [10]  127 	pop	af
   007A                     128 00106$:
                     007A   129 	C$_fs2slong.c$45$1_0$21	= .
                            130 	.globl	C$_fs2slong.c$45$1_0$21
                            131 ;_fs2slong.c:45: }
   007A DD E1         [14]  132 	pop	ix
                     007C   133 	C$_fs2slong.c$45$1_0$21	= .
                            134 	.globl	C$_fs2slong.c$45$1_0$21
                     007C   135 	XG$__fs2slong$0$0	= .
                            136 	.globl	XG$__fs2slong$0$0
   007C C9            [10]  137 	ret
                            138 	.area _HOME
                            139 ;--------------------------------------------------------
                            140 ; code
                            141 ;--------------------------------------------------------
                            142 	.area _CODE
                            143 	.area _CODE
                            144 	.area _INITIALIZER
                            145 	.area _CABS (ABS)
