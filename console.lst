                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.8.0 #10562 (Linux)
                              4 ;--------------------------------------------------------
                              5 	.module console
                              6 	.optsdcc -mz80
                              7 	
                              8 ;--------------------------------------------------------
                              9 ; Public variables in this module
                             10 ;--------------------------------------------------------
                             11 	.globl _reverse
                             12 	.globl _swap
                             13 	.globl _strlen
                             14 	.globl _strcat
                             15 	.globl _abs
                             16 	.globl _con_timer_ms
                             17 	.globl _con_timer_counter
                             18 	.globl _console
                             19 	.globl _putchar
                             20 	.globl _con_init
                             21 	.globl _con_init_timer
                             22 	.globl _con_gotoxy
                             23 	.globl _con_cls
                             24 	.globl _con_putc
                             25 	.globl _con_puts
                             26 	.globl _con_getc_timer
                             27 	.globl _con_getc
                             28 	.globl _con_exit
                             29 	.globl _con_itoa
                             30 	.globl _con_print_timer
                             31 ;--------------------------------------------------------
                             32 ; special function registers
                             33 ;--------------------------------------------------------
                             34 ;--------------------------------------------------------
                             35 ; ram data
                             36 ;--------------------------------------------------------
                             37 	.area _DATA
                     0000    38 G$console$0_0$0==.
   0000                      39 _console::
   0000                      40 	.ds 2
                     0002    41 G$con_timer_counter$0_0$0==.
   0002                      42 _con_timer_counter::
   0002                      43 	.ds 4
                     0006    44 G$con_timer_ms$0_0$0==.
   0006                      45 _con_timer_ms::
   0006                      46 	.ds 2
                             47 ;--------------------------------------------------------
                             48 ; ram data
                             49 ;--------------------------------------------------------
                             50 	.area _INITIALIZED
                             51 ;--------------------------------------------------------
                             52 ; absolute external ram data
                             53 ;--------------------------------------------------------
                             54 	.area _DABS (ABS)
                             55 ;--------------------------------------------------------
                             56 ; global & static initialisations
                             57 ;--------------------------------------------------------
                             58 	.area _HOME
                             59 	.area _GSINIT
                             60 	.area _GSFINAL
                             61 	.area _GSINIT
                             62 ;--------------------------------------------------------
                             63 ; Home
                             64 ;--------------------------------------------------------
                             65 	.area _HOME
                             66 	.area _HOME
                             67 ;--------------------------------------------------------
                             68 ; code
                             69 ;--------------------------------------------------------
                             70 	.area _CODE
                     0000    71 	G$putchar$0$0	= .
                             72 	.globl	G$putchar$0$0
                     0000    73 	C$console.c$11$0_0$67	= .
                             74 	.globl	C$console.c$11$0_0$67
                             75 ;console.c:11: int putchar(int c) {
                             76 ;	---------------------------------
                             77 ; Function putchar
                             78 ; ---------------------------------
   0000                      79 _putchar::
                     0000    80 	C$console.c$12$1_0$67	= .
                             81 	.globl	C$console.c$12$1_0$67
                             82 ;console.c:12: con_putc(c);
   0000 21 02 00      [10]   83 	ld	hl, #2+0
   0003 39            [11]   84 	add	hl, sp
   0004 46            [ 7]   85 	ld	b, (hl)
   0005 C5            [11]   86 	push	bc
   0006 33            [ 6]   87 	inc	sp
   0007 CDr8Fr00      [17]   88 	call	_con_putc
   000A 33            [ 6]   89 	inc	sp
                     000B    90 	C$console.c$13$1_0$67	= .
                             91 	.globl	C$console.c$13$1_0$67
                             92 ;console.c:13: return c;
   000B C1            [10]   93 	pop	bc
   000C E1            [10]   94 	pop	hl
   000D E5            [11]   95 	push	hl
   000E C5            [11]   96 	push	bc
                     000F    97 	C$console.c$14$1_0$67	= .
                             98 	.globl	C$console.c$14$1_0$67
                             99 ;console.c:14: }
                     000F   100 	C$console.c$14$1_0$67	= .
                            101 	.globl	C$console.c$14$1_0$67
                     000F   102 	XG$putchar$0$0	= .
                            103 	.globl	XG$putchar$0$0
   000F C9            [10]  104 	ret
                     0010   105 	G$con_init$0$0	= .
                            106 	.globl	G$con_init$0$0
                     0010   107 	C$console.c$16$1_0$68	= .
                            108 	.globl	C$console.c$16$1_0$68
                            109 ;console.c:16: void con_init()
                            110 ;	---------------------------------
                            111 ; Function con_init
                            112 ; ---------------------------------
   0010                     113 _con_init::
                     0010   114 	C$console.c$18$1_0$68	= .
                            115 	.globl	C$console.c$18$1_0$68
                            116 ;console.c:18: console = VIDEOSTART;
   0010 21 00 F8      [10]  117 	ld	hl, #0xf800
   0013 22r00r00      [16]  118 	ld	(_console), hl
                     0016   119 	C$console.c$19$1_0$68	= .
                            120 	.globl	C$console.c$19$1_0$68
                            121 ;console.c:19: return;
                     0016   122 	C$console.c$20$1_0$68	= .
                            123 	.globl	C$console.c$20$1_0$68
                            124 ;console.c:20: }
                     0016   125 	C$console.c$20$1_0$68	= .
                            126 	.globl	C$console.c$20$1_0$68
                     0016   127 	XG$con_init$0$0	= .
                            128 	.globl	XG$con_init$0$0
   0016 C9            [10]  129 	ret
                     0017   130 	G$con_init_timer$0$0	= .
                            131 	.globl	G$con_init_timer$0$0
                     0017   132 	C$console.c$22$1_0$70	= .
                            133 	.globl	C$console.c$22$1_0$70
                            134 ;console.c:22: void con_init_timer(uint8_t init)
                            135 ;	---------------------------------
                            136 ; Function con_init_timer
                            137 ; ---------------------------------
   0017                     138 _con_init_timer::
                     0017   139 	C$console.c$24$1_0$70	= .
                            140 	.globl	C$console.c$24$1_0$70
                            141 ;console.c:24: con_timer_counter = 0;
   0017 AF            [ 4]  142 	xor	a, a
   0018 FD 21r02r00   [14]  143 	ld	iy, #_con_timer_counter
   001C FD 77 00      [19]  144 	ld	0 (iy), a
   001F FD 77 01      [19]  145 	ld	1 (iy), a
   0022 FD 77 02      [19]  146 	ld	2 (iy), a
   0025 FD 77 03      [19]  147 	ld	3 (iy), a
                     0028   148 	C$console.c$25$1_0$70	= .
                            149 	.globl	C$console.c$25$1_0$70
                            150 ;console.c:25: con_timer_ms = init;
   0028 21 02 00      [10]  151 	ld	hl, #2+0
   002B 39            [11]  152 	add	hl, sp
   002C 7E            [ 7]  153 	ld	a, (hl)
   002D FD 21r06r00   [14]  154 	ld	iy, #_con_timer_ms
   0031 FD 77 00      [19]  155 	ld	0 (iy), a
   0034 FD 36 01 00   [19]  156 	ld	1 (iy), #0x00
                     0038   157 	C$console.c$26$1_0$70	= .
                            158 	.globl	C$console.c$26$1_0$70
                            159 ;console.c:26: return;
                     0038   160 	C$console.c$27$1_0$70	= .
                            161 	.globl	C$console.c$27$1_0$70
                            162 ;console.c:27: }
                     0038   163 	C$console.c$27$1_0$70	= .
                            164 	.globl	C$console.c$27$1_0$70
                     0038   165 	XG$con_init_timer$0$0	= .
                            166 	.globl	XG$con_init_timer$0$0
   0038 C9            [10]  167 	ret
                     0039   168 	G$con_gotoxy$0$0	= .
                            169 	.globl	G$con_gotoxy$0$0
                     0039   170 	C$console.c$29$1_0$72	= .
                            171 	.globl	C$console.c$29$1_0$72
                            172 ;console.c:29: void con_gotoxy(unsigned char x, unsigned char y)
                            173 ;	---------------------------------
                            174 ; Function con_gotoxy
                            175 ; ---------------------------------
   0039                     176 _con_gotoxy::
                     0039   177 	C$console.c$31$1_0$72	= .
                            178 	.globl	C$console.c$31$1_0$72
                            179 ;console.c:31: console = VIDEOSTART + (y*SCREENWIDTH) + x;
   0039 21 03 00      [10]  180 	ld	hl, #3+0
   003C 39            [11]  181 	add	hl, sp
   003D 4E            [ 7]  182 	ld	c, (hl)
   003E 06 00         [ 7]  183 	ld	b, #0x00
   0040 69            [ 4]  184 	ld	l, c
   0041 60            [ 4]  185 	ld	h, b
   0042 29            [11]  186 	add	hl, hl
   0043 29            [11]  187 	add	hl, hl
   0044 09            [11]  188 	add	hl, bc
   0045 29            [11]  189 	add	hl, hl
   0046 29            [11]  190 	add	hl, hl
   0047 29            [11]  191 	add	hl, hl
   0048 4D            [ 4]  192 	ld	c, l
   0049 7C            [ 4]  193 	ld	a, h
   004A C6 F8         [ 7]  194 	add	a, #0xf8
   004C 47            [ 4]  195 	ld	b, a
   004D 79            [ 4]  196 	ld	a, c
   004E 21 02 00      [10]  197 	ld	hl, #2
   0051 39            [11]  198 	add	hl, sp
   0052 FD 21r00r00   [14]  199 	ld	iy, #_console
   0056 86            [ 7]  200 	add	a, (hl)
   0057 FD 77 00      [19]  201 	ld	0 (iy), a
   005A 78            [ 4]  202 	ld	a, b
   005B CE 00         [ 7]  203 	adc	a, #0x00
   005D FD 23         [10]  204 	inc	iy
   005F FD 77 00      [19]  205 	ld	0 (iy), a
                     0062   206 	C$console.c$32$1_0$72	= .
                            207 	.globl	C$console.c$32$1_0$72
                            208 ;console.c:32: return;
                     0062   209 	C$console.c$33$1_0$72	= .
                            210 	.globl	C$console.c$33$1_0$72
                            211 ;console.c:33: }
                     0062   212 	C$console.c$33$1_0$72	= .
                            213 	.globl	C$console.c$33$1_0$72
                     0062   214 	XG$con_gotoxy$0$0	= .
                            215 	.globl	XG$con_gotoxy$0$0
   0062 C9            [10]  216 	ret
                     0063   217 	G$con_cls$0$0	= .
                            218 	.globl	G$con_cls$0$0
                     0063   219 	C$console.c$35$1_0$73	= .
                            220 	.globl	C$console.c$35$1_0$73
                            221 ;console.c:35: void con_cls()
                            222 ;	---------------------------------
                            223 ; Function con_cls
                            224 ; ---------------------------------
   0063                     225 _con_cls::
                     0063   226 	C$console.c$37$2_0$74	= .
                            227 	.globl	C$console.c$37$2_0$74
                            228 ;console.c:37: for(console = VIDEOSTART; console < VIDEOEND; console++)
   0063 21 00 F8      [10]  229 	ld	hl, #0xf800
   0066 22r00r00      [16]  230 	ld	(_console), hl
   0069                     231 00103$:
   0069 FD 21r00r00   [14]  232 	ld	iy, #_console
   006D FD 7E 00      [19]  233 	ld	a, 0 (iy)
   0070 D6 B0         [ 7]  234 	sub	a, #0xb0
   0072 FD 7E 01      [19]  235 	ld	a, 1 (iy)
   0075 DE FC         [ 7]  236 	sbc	a, #0xfc
   0077 30 0F         [12]  237 	jr	NC,00101$
                     0079   238 	C$console.c$39$3_0$75	= .
                            239 	.globl	C$console.c$39$3_0$75
                            240 ;console.c:39: *console = ' ';
   0079 2Ar00r00      [16]  241 	ld	hl, (_console)
   007C 36 20         [10]  242 	ld	(hl), #0x20
                     007E   243 	C$console.c$37$2_0$74	= .
                            244 	.globl	C$console.c$37$2_0$74
                            245 ;console.c:37: for(console = VIDEOSTART; console < VIDEOEND; console++)
   007E FD 34 00      [23]  246 	inc	0 (iy)
   0081 20 E6         [12]  247 	jr	NZ,00103$
   0083 FD 34 01      [23]  248 	inc	1 (iy)
   0086 18 E1         [12]  249 	jr	00103$
   0088                     250 00101$:
                     0088   251 	C$console.c$41$1_0$73	= .
                            252 	.globl	C$console.c$41$1_0$73
                            253 ;console.c:41: console = VIDEOSTART;
   0088 21 00 F8      [10]  254 	ld	hl, #0xf800
   008B 22r00r00      [16]  255 	ld	(_console), hl
                     008E   256 	C$console.c$42$1_0$73	= .
                            257 	.globl	C$console.c$42$1_0$73
                            258 ;console.c:42: return;
                     008E   259 	C$console.c$43$1_0$73	= .
                            260 	.globl	C$console.c$43$1_0$73
                            261 ;console.c:43: }
                     008E   262 	C$console.c$43$1_0$73	= .
                            263 	.globl	C$console.c$43$1_0$73
                     008E   264 	XG$con_cls$0$0	= .
                            265 	.globl	XG$con_cls$0$0
   008E C9            [10]  266 	ret
                     008F   267 	G$con_putc$0$0	= .
                            268 	.globl	G$con_putc$0$0
                     008F   269 	C$console.c$44$1_0$77	= .
                            270 	.globl	C$console.c$44$1_0$77
                            271 ;console.c:44: void con_putc(char c)
                            272 ;	---------------------------------
                            273 ; Function con_putc
                            274 ; ---------------------------------
   008F                     275 _con_putc::
                     008F   276 	C$console.c$46$1_0$77	= .
                            277 	.globl	C$console.c$46$1_0$77
                            278 ;console.c:46: *console = c;
   008F 2Ar00r00      [16]  279 	ld	hl, (_console)
   0092 FD 21 02 00   [14]  280 	ld	iy, #2
   0096 FD 39         [15]  281 	add	iy, sp
   0098 FD 7E 00      [19]  282 	ld	a, 0 (iy)
   009B 77            [ 7]  283 	ld	(hl), a
                     009C   284 	C$console.c$47$1_0$77	= .
                            285 	.globl	C$console.c$47$1_0$77
                            286 ;console.c:47: console++;
   009C FD 21r00r00   [14]  287 	ld	iy, #_console
   00A0 FD 34 00      [23]  288 	inc	0 (iy)
   00A3 20 03         [12]  289 	jr	NZ,00110$
   00A5 FD 34 01      [23]  290 	inc	1 (iy)
   00A8                     291 00110$:
                     00A8   292 	C$console.c$48$1_0$77	= .
                            293 	.globl	C$console.c$48$1_0$77
                            294 ;console.c:48: if(console == VIDEOEND) 
   00A8 FD 7E 00      [19]  295 	ld	a, 0 (iy)
   00AB D6 B0         [ 7]  296 	sub	a, #0xb0
   00AD C0            [11]  297 	ret	NZ
   00AE FD 7E 01      [19]  298 	ld	a, 1 (iy)
   00B1 D6 FC         [ 7]  299 	sub	a, #0xfc
   00B3 C0            [11]  300 	ret	NZ
                     00B4   301 	C$console.c$49$1_0$77	= .
                            302 	.globl	C$console.c$49$1_0$77
                            303 ;console.c:49: console = VIDEOSTART;
   00B4 21 00 F8      [10]  304 	ld	hl, #0xf800
   00B7 22r00r00      [16]  305 	ld	(_console), hl
                     00BA   306 	C$console.c$50$1_0$77	= .
                            307 	.globl	C$console.c$50$1_0$77
                            308 ;console.c:50: return;
                     00BA   309 	C$console.c$51$1_0$77	= .
                            310 	.globl	C$console.c$51$1_0$77
                            311 ;console.c:51: }
                     00BA   312 	C$console.c$51$1_0$77	= .
                            313 	.globl	C$console.c$51$1_0$77
                     00BA   314 	XG$con_putc$0$0	= .
                            315 	.globl	XG$con_putc$0$0
   00BA C9            [10]  316 	ret
                     00BB   317 	G$con_puts$0$0	= .
                            318 	.globl	G$con_puts$0$0
                     00BB   319 	C$console.c$53$1_0$79	= .
                            320 	.globl	C$console.c$53$1_0$79
                            321 ;console.c:53: void con_puts(const char *s)
                            322 ;	---------------------------------
                            323 ; Function con_puts
                            324 ; ---------------------------------
   00BB                     325 _con_puts::
                     00BB   326 	C$console.c$55$1_0$79	= .
                            327 	.globl	C$console.c$55$1_0$79
                            328 ;console.c:55: while(*s)
   00BB D1            [10]  329 	pop	de
   00BC C1            [10]  330 	pop	bc
   00BD C5            [11]  331 	push	bc
   00BE D5            [11]  332 	push	de
   00BF                     333 00101$:
   00BF 0A            [ 7]  334 	ld	a, (bc)
   00C0 B7            [ 4]  335 	or	a, a
   00C1 C8            [11]  336 	ret	Z
                     00C2   337 	C$console.c$57$2_0$80	= .
                            338 	.globl	C$console.c$57$2_0$80
                            339 ;console.c:57: con_putc(*s);
   00C2 C5            [11]  340 	push	bc
   00C3 F5            [11]  341 	push	af
   00C4 33            [ 6]  342 	inc	sp
   00C5 CDr8Fr00      [17]  343 	call	_con_putc
   00C8 33            [ 6]  344 	inc	sp
   00C9 C1            [10]  345 	pop	bc
                     00CA   346 	C$console.c$58$2_0$80	= .
                            347 	.globl	C$console.c$58$2_0$80
                            348 ;console.c:58: s++;
   00CA 03            [ 6]  349 	inc	bc
                     00CB   350 	C$console.c$60$1_0$79	= .
                            351 	.globl	C$console.c$60$1_0$79
                            352 ;console.c:60: return;
                     00CB   353 	C$console.c$61$1_0$79	= .
                            354 	.globl	C$console.c$61$1_0$79
                            355 ;console.c:61: }
                     00CB   356 	C$console.c$61$1_0$79	= .
                            357 	.globl	C$console.c$61$1_0$79
                     00CB   358 	XG$con_puts$0$0	= .
                            359 	.globl	XG$con_puts$0$0
   00CB 18 F2         [12]  360 	jr	00101$
                     00CD   361 	G$con_getc_timer$0$0	= .
                            362 	.globl	G$con_getc_timer$0$0
                     00CD   363 	C$console.c$63$1_0$82	= .
                            364 	.globl	C$console.c$63$1_0$82
                            365 ;console.c:63: char con_getc_timer(uint16_t threshold)
                            366 ;	---------------------------------
                            367 ; Function con_getc_timer
                            368 ; ---------------------------------
   00CD                     369 _con_getc_timer::
                     00CD   370 	C$console.c$65$1_0$82	= .
                            371 	.globl	C$console.c$65$1_0$82
                            372 ;console.c:65: while(*(BIOS_OUTBOXFLAG) == 0)
   00CD                     373 00105$:
   00CD 3A 00 02      [13]  374 	ld	a, (#0x0200)
   00D0 B7            [ 4]  375 	or	a, a
   00D1 20 6B         [12]  376 	jr	NZ,00107$
                     00D3   377 	C$console.c$67$2_0$83	= .
                            378 	.globl	C$console.c$67$2_0$83
                            379 ;console.c:67: con_timer_counter++;
   00D3 FD 21r02r00   [14]  380 	ld	iy, #_con_timer_counter
   00D7 FD 34 00      [23]  381 	inc	0 (iy)
   00DA 20 0D         [12]  382 	jr	NZ,00130$
   00DC FD 34 01      [23]  383 	inc	1 (iy)
   00DF 20 08         [12]  384 	jr	NZ,00130$
   00E1 FD 34 02      [23]  385 	inc	2 (iy)
   00E4 20 03         [12]  386 	jr	NZ,00130$
   00E6 FD 34 03      [23]  387 	inc	3 (iy)
   00E9                     388 00130$:
                     00E9   389 	C$console.c$68$2_0$83	= .
                            390 	.globl	C$console.c$68$2_0$83
                            391 ;console.c:68: if(con_timer_counter > threshold)
   00E9 21 02 00      [10]  392 	ld	hl, #2
   00EC 39            [11]  393 	add	hl, sp
   00ED 4E            [ 7]  394 	ld	c, (hl)
   00EE 23            [ 6]  395 	inc	hl
   00EF 46            [ 7]  396 	ld	b, (hl)
   00F0 11 00 00      [10]  397 	ld	de, #0x0000
   00F3 79            [ 4]  398 	ld	a, c
   00F4 FD 21r02r00   [14]  399 	ld	iy, #_con_timer_counter
   00F8 FD 96 00      [19]  400 	sub	a, 0 (iy)
   00FB 78            [ 4]  401 	ld	a, b
   00FC FD 9E 01      [19]  402 	sbc	a, 1 (iy)
   00FF 7B            [ 4]  403 	ld	a, e
   0100 FD 9E 02      [19]  404 	sbc	a, 2 (iy)
   0103 7A            [ 4]  405 	ld	a, d
   0104 FD 9E 03      [19]  406 	sbc	a, 3 (iy)
   0107 30 30         [12]  407 	jr	NC,00104$
                     0109   408 	C$console.c$70$3_0$84	= .
                            409 	.globl	C$console.c$70$3_0$84
                            410 ;console.c:70: con_timer_counter = 0;
   0109 AF            [ 4]  411 	xor	a, a
   010A FD 77 00      [19]  412 	ld	0 (iy), a
   010D FD 77 01      [19]  413 	ld	1 (iy), a
   0110 FD 77 02      [19]  414 	ld	2 (iy), a
   0113 FD 77 03      [19]  415 	ld	3 (iy), a
                     0116   416 	C$console.c$71$3_0$84	= .
                            417 	.globl	C$console.c$71$3_0$84
                            418 ;console.c:71: con_timer_ms--; 
   0116 2Ar06r00      [16]  419 	ld	hl, (_con_timer_ms)
   0119 2B            [ 6]  420 	dec	hl
   011A 22r06r00      [16]  421 	ld	(_con_timer_ms), hl
                     011D   422 	C$console.c$72$3_0$84	= .
                            423 	.globl	C$console.c$72$3_0$84
                            424 ;console.c:72: if(con_timer_ms == 0)
   011D FD 21r06r00   [14]  425 	ld	iy, #_con_timer_ms
   0121 FD 7E 01      [19]  426 	ld	a, 1 (iy)
   0124 FD B6 00      [19]  427 	or	a, 0 (iy)
   0127 20 10         [12]  428 	jr	NZ,00104$
                     0129   429 	C$console.c$74$4_0$85	= .
                            430 	.globl	C$console.c$74$4_0$85
                            431 ;console.c:74: con_timer_ms = 0;
   0129 21 00 00      [10]  432 	ld	hl, #0x0000
   012C 22r06r00      [16]  433 	ld	(_con_timer_ms), hl
                     012F   434 	C$console.c$75$4_0$85	= .
                            435 	.globl	C$console.c$75$4_0$85
                            436 ;console.c:75: con_print_timer();
   012F CDr29r03      [17]  437 	call	_con_print_timer
                     0132   438 	C$console.c$76$4_0$85	= .
                            439 	.globl	C$console.c$76$4_0$85
                            440 ;console.c:76: *(BIOS_OUTBOXDATA) = 'Q';
   0132 21 01 02      [10]  441 	ld	hl, #0x0201
   0135 36 51         [10]  442 	ld	(hl), #0x51
                     0137   443 	C$console.c$77$4_0$85	= .
                            444 	.globl	C$console.c$77$4_0$85
                            445 ;console.c:77: break;
   0137 18 05         [12]  446 	jr	00107$
   0139                     447 00104$:
                     0139   448 	C$console.c$80$2_0$83	= .
                            449 	.globl	C$console.c$80$2_0$83
                            450 ;console.c:80: con_print_timer();
   0139 CDr29r03      [17]  451 	call	_con_print_timer
   013C 18 8F         [12]  452 	jr	00105$
   013E                     453 00107$:
                     013E   454 	C$console.c$82$1_0$82	= .
                            455 	.globl	C$console.c$82$1_0$82
                            456 ;console.c:82: *(BIOS_OUTBOXFLAG) = 0;         // acknowlege reception
   013E 21 00 02      [10]  457 	ld	hl, #0x0200
   0141 36 00         [10]  458 	ld	(hl), #0x00
                     0143   459 	C$console.c$83$1_0$82	= .
                            460 	.globl	C$console.c$83$1_0$82
                            461 ;console.c:83: return *(BIOS_OUTBOXDATA);      // return the data slot
   0143 2E 01         [ 7]  462 	ld	l, #0x01
   0145 6E            [ 7]  463 	ld	l, (hl)
                     0146   464 	C$console.c$84$1_0$82	= .
                            465 	.globl	C$console.c$84$1_0$82
                            466 ;console.c:84: }
                     0146   467 	C$console.c$84$1_0$82	= .
                            468 	.globl	C$console.c$84$1_0$82
                     0146   469 	XG$con_getc_timer$0$0	= .
                            470 	.globl	XG$con_getc_timer$0$0
   0146 C9            [10]  471 	ret
                     0147   472 	G$con_getc$0$0	= .
                            473 	.globl	G$con_getc$0$0
                     0147   474 	C$console.c$86$1_0$86	= .
                            475 	.globl	C$console.c$86$1_0$86
                            476 ;console.c:86: char con_getc()
                            477 ;	---------------------------------
                            478 ; Function con_getc
                            479 ; ---------------------------------
   0147                     480 _con_getc::
                     0147   481 	C$console.c$88$1_0$86	= .
                            482 	.globl	C$console.c$88$1_0$86
                            483 ;console.c:88: while(*(BIOS_OUTBOXFLAG) == 0); // blocked wait for the mailbox flag
   0147                     484 00101$:
   0147 3A 00 02      [13]  485 	ld	a, (#0x0200)
   014A B7            [ 4]  486 	or	a, a
   014B 28 FA         [12]  487 	jr	Z,00101$
                     014D   488 	C$console.c$89$1_0$86	= .
                            489 	.globl	C$console.c$89$1_0$86
                            490 ;console.c:89: *(BIOS_OUTBOXFLAG) = 0;         // acknowlege reception
   014D 21 00 02      [10]  491 	ld	hl, #0x0200
   0150 36 00         [10]  492 	ld	(hl), #0x00
                     0152   493 	C$console.c$90$1_0$86	= .
                            494 	.globl	C$console.c$90$1_0$86
                            495 ;console.c:90: return *(BIOS_OUTBOXDATA);      // return the data slot
   0152 2E 01         [ 7]  496 	ld	l, #0x01
   0154 6E            [ 7]  497 	ld	l, (hl)
                     0155   498 	C$console.c$91$1_0$86	= .
                            499 	.globl	C$console.c$91$1_0$86
                            500 ;console.c:91: }
                     0155   501 	C$console.c$91$1_0$86	= .
                            502 	.globl	C$console.c$91$1_0$86
                     0155   503 	XG$con_getc$0$0	= .
                            504 	.globl	XG$con_getc$0$0
   0155 C9            [10]  505 	ret
                     0156   506 	G$con_exit$0$0	= .
                            507 	.globl	G$con_exit$0$0
                     0156   508 	C$console.c$93$1_0$87	= .
                            509 	.globl	C$console.c$93$1_0$87
                            510 ;console.c:93: void con_exit()
                            511 ;	---------------------------------
                            512 ; Function con_exit
                            513 ; ---------------------------------
   0156                     514 _con_exit::
                     0156   515 	C$console.c$95$1_0$87	= .
                            516 	.globl	C$console.c$95$1_0$87
                            517 ;console.c:95: *(BIOS_INBOXFLAG) = 0x7F;       // request to exit();
   0156 21 02 02      [10]  518 	ld	hl, #0x0202
   0159 36 7F         [10]  519 	ld	(hl), #0x7f
                     015B   520 	C$console.c$96$1_0$87	= .
                            521 	.globl	C$console.c$96$1_0$87
                            522 ;console.c:96: while(1);
   015B                     523 00102$:
                     015B   524 	C$console.c$97$1_0$87	= .
                            525 	.globl	C$console.c$97$1_0$87
                            526 ;console.c:97: }
                     015B   527 	C$console.c$97$1_0$87	= .
                            528 	.globl	C$console.c$97$1_0$87
                     015B   529 	XG$con_exit$0$0	= .
                            530 	.globl	XG$con_exit$0$0
   015B 18 FE         [12]  531 	jr	00102$
                     015D   532 	G$swap$0$0	= .
                            533 	.globl	G$swap$0$0
                     015D   534 	C$console.c$99$1_0$89	= .
                            535 	.globl	C$console.c$99$1_0$89
                            536 ;console.c:99: void swap(char *x, char *y) {
                            537 ;	---------------------------------
                            538 ; Function swap
                            539 ; ---------------------------------
   015D                     540 _swap::
   015D DD E5         [15]  541 	push	ix
   015F DD 21 00 00   [14]  542 	ld	ix,#0
   0163 DD 39         [15]  543 	add	ix,sp
   0165 3B            [ 6]  544 	dec	sp
                     0166   545 	C$console.c$100$1_0$89	= .
                            546 	.globl	C$console.c$100$1_0$89
                            547 ;console.c:100: char t = *x; *x = *y; *y = t;
   0166 DD 5E 04      [19]  548 	ld	e, 4 (ix)
   0169 DD 56 05      [19]  549 	ld	d, 5 (ix)
   016C 1A            [ 7]  550 	ld	a, (de)
   016D DD 77 FF      [19]  551 	ld	-1 (ix), a
   0170 DD 4E 06      [19]  552 	ld	c, 6 (ix)
   0173 DD 46 07      [19]  553 	ld	b, 7 (ix)
   0176 0A            [ 7]  554 	ld	a, (bc)
   0177 12            [ 7]  555 	ld	(de), a
   0178 DD 7E FF      [19]  556 	ld	a, -1 (ix)
   017B 02            [ 7]  557 	ld	(bc), a
                     017C   558 	C$console.c$101$1_0$89	= .
                            559 	.globl	C$console.c$101$1_0$89
                            560 ;console.c:101: }
   017C 33            [ 6]  561 	inc	sp
   017D DD E1         [14]  562 	pop	ix
                     017F   563 	C$console.c$101$1_0$89	= .
                            564 	.globl	C$console.c$101$1_0$89
                     017F   565 	XG$swap$0$0	= .
                            566 	.globl	XG$swap$0$0
   017F C9            [10]  567 	ret
                     0180   568 	G$reverse$0$0	= .
                            569 	.globl	G$reverse$0$0
                     0180   570 	C$console.c$104$1_0$91	= .
                            571 	.globl	C$console.c$104$1_0$91
                            572 ;console.c:104: char* reverse(char *buffer, int i, int j)
                            573 ;	---------------------------------
                            574 ; Function reverse
                            575 ; ---------------------------------
   0180                     576 _reverse::
   0180 DD E5         [15]  577 	push	ix
   0182 DD 21 00 00   [14]  578 	ld	ix,#0
   0186 DD 39         [15]  579 	add	ix,sp
   0188 F5            [11]  580 	push	af
                     0189   581 	C$console.c$106$1_0$91	= .
                            582 	.globl	C$console.c$106$1_0$91
                            583 ;console.c:106: while (i < j) {
   0189 DD 5E 08      [19]  584 	ld	e, 8 (ix)
   018C DD 56 09      [19]  585 	ld	d, 9 (ix)
   018F DD 4E 06      [19]  586 	ld	c, 6 (ix)
   0192 DD 46 07      [19]  587 	ld	b, 7 (ix)
   0195                     588 00101$:
   0195 79            [ 4]  589 	ld	a, c
   0196 93            [ 4]  590 	sub	a, e
   0197 78            [ 4]  591 	ld	a, b
   0198 9A            [ 4]  592 	sbc	a, d
   0199 E2r9Er01      [10]  593 	jp	PO, 00117$
   019C EE 80         [ 7]  594 	xor	a, #0x80
   019E                     595 00117$:
   019E F2rCDr01      [10]  596 	jp	P, 00103$
                     01A1   597 	C$console.c$107$2_0$92	= .
                            598 	.globl	C$console.c$107$2_0$92
                            599 ;console.c:107: swap(&buffer[i++], &buffer[j--]);
   01A1 33            [ 6]  600 	inc	sp
   01A2 33            [ 6]  601 	inc	sp
   01A3 D5            [11]  602 	push	de
   01A4 1B            [ 6]  603 	dec	de
   01A5 DD 7E FE      [19]  604 	ld	a, -2 (ix)
   01A8 DD 86 04      [19]  605 	add	a, 4 (ix)
   01AB 6F            [ 4]  606 	ld	l, a
   01AC DD 7E FF      [19]  607 	ld	a, -1 (ix)
   01AF DD 8E 05      [19]  608 	adc	a, 5 (ix)
   01B2 67            [ 4]  609 	ld	h, a
   01B3 C5            [11]  610 	push	bc
   01B4 FD E1         [14]  611 	pop	iy
   01B6 03            [ 6]  612 	inc	bc
   01B7 C5            [11]  613 	push	bc
   01B8 DD 4E 04      [19]  614 	ld	c, 4 (ix)
   01BB DD 46 05      [19]  615 	ld	b, 5 (ix)
   01BE FD 09         [15]  616 	add	iy, bc
   01C0 D5            [11]  617 	push	de
   01C1 E5            [11]  618 	push	hl
   01C2 FD E5         [15]  619 	push	iy
   01C4 CDr5Dr01      [17]  620 	call	_swap
   01C7 F1            [10]  621 	pop	af
   01C8 F1            [10]  622 	pop	af
   01C9 D1            [10]  623 	pop	de
   01CA C1            [10]  624 	pop	bc
   01CB 18 C8         [12]  625 	jr	00101$
   01CD                     626 00103$:
                     01CD   627 	C$console.c$110$1_0$91	= .
                            628 	.globl	C$console.c$110$1_0$91
                            629 ;console.c:110: return buffer;
   01CD DD 6E 04      [19]  630 	ld	l, 4 (ix)
   01D0 DD 66 05      [19]  631 	ld	h, 5 (ix)
                     01D3   632 	C$console.c$111$1_0$91	= .
                            633 	.globl	C$console.c$111$1_0$91
                            634 ;console.c:111: }
   01D3 DD F9         [10]  635 	ld	sp, ix
   01D5 DD E1         [14]  636 	pop	ix
                     01D7   637 	C$console.c$111$1_0$91	= .
                            638 	.globl	C$console.c$111$1_0$91
                     01D7   639 	XG$reverse$0$0	= .
                            640 	.globl	XG$reverse$0$0
   01D7 C9            [10]  641 	ret
                     01D8   642 	G$con_itoa$0$0	= .
                            643 	.globl	G$con_itoa$0$0
                     01D8   644 	C$console.c$114$1_0$94	= .
                            645 	.globl	C$console.c$114$1_0$94
                            646 ;console.c:114: char* con_itoa(int value, char* buffer, int base)
                            647 ;	---------------------------------
                            648 ; Function con_itoa
                            649 ; ---------------------------------
   01D8                     650 _con_itoa::
   01D8 DD E5         [15]  651 	push	ix
   01DA DD 21 00 00   [14]  652 	ld	ix,#0
   01DE DD 39         [15]  653 	add	ix,sp
   01E0 F5            [11]  654 	push	af
   01E1 3B            [ 6]  655 	dec	sp
                     01E2   656 	C$console.c$117$1_0$94	= .
                            657 	.globl	C$console.c$117$1_0$94
                            658 ;console.c:117: if (base < 2 || base > 32) {
   01E2 DD 7E 08      [19]  659 	ld	a, 8 (ix)
   01E5 D6 02         [ 7]  660 	sub	a, #0x02
   01E7 DD 7E 09      [19]  661 	ld	a, 9 (ix)
   01EA 17            [ 4]  662 	rla
   01EB 3F            [ 4]  663 	ccf
   01EC 1F            [ 4]  664 	rra
   01ED DE 80         [ 7]  665 	sbc	a, #0x80
   01EF 38 12         [12]  666 	jr	C,00101$
   01F1 3E 20         [ 7]  667 	ld	a, #0x20
   01F3 DD BE 08      [19]  668 	cp	a, 8 (ix)
   01F6 3E 00         [ 7]  669 	ld	a, #0x00
   01F8 DD 9E 09      [19]  670 	sbc	a, 9 (ix)
   01FB E2r00r02      [10]  671 	jp	PO, 00166$
   01FE EE 80         [ 7]  672 	xor	a, #0x80
   0200                     673 00166$:
   0200 F2r0Cr02      [10]  674 	jp	P, 00102$
   0203                     675 00101$:
                     0203   676 	C$console.c$118$2_0$95	= .
                            677 	.globl	C$console.c$118$2_0$95
                            678 ;console.c:118: return buffer;
   0203 DD 6E 06      [19]  679 	ld	l, 6 (ix)
   0206 DD 66 07      [19]  680 	ld	h, 7 (ix)
   0209 C3r1Fr03      [10]  681 	jp	00119$
   020C                     682 00102$:
                     020C   683 	C$console.c$122$1_1$96	= .
                            684 	.globl	C$console.c$122$1_1$96
                            685 ;console.c:122: int n = abs(value);
   020C DD 6E 04      [19]  686 	ld	l, 4 (ix)
   020F DD 66 05      [19]  687 	ld	h, 5 (ix)
   0212 E5            [11]  688 	push	hl
   0213 CDr00r00      [17]  689 	call	_abs
   0216 F1            [10]  690 	pop	af
                     0217   691 	C$console.c$124$1_1$96	= .
                            692 	.globl	C$console.c$124$1_1$96
                            693 ;console.c:124: int i = 0;
   0217 01 00 00      [10]  694 	ld	bc, #0x0000
                     021A   695 	C$console.c$125$1_1$96	= .
                            696 	.globl	C$console.c$125$1_1$96
                            697 ;console.c:125: while (n)
   021A                     698 00107$:
                     021A   699 	C$console.c$130$1_1$94	= .
                            700 	.globl	C$console.c$130$1_1$94
                            701 ;console.c:130: buffer[i++] = 65 + (r - 10);
   021A 79            [ 4]  702 	ld	a, c
   021B C6 01         [ 7]  703 	add	a, #0x01
   021D DD 77 FE      [19]  704 	ld	-2 (ix), a
   0220 78            [ 4]  705 	ld	a, b
   0221 CE 00         [ 7]  706 	adc	a, #0x00
   0223 DD 77 FF      [19]  707 	ld	-1 (ix), a
                     0226   708 	C$console.c$125$1_1$96	= .
                            709 	.globl	C$console.c$125$1_1$96
                            710 ;console.c:125: while (n)
   0226 7C            [ 4]  711 	ld	a, h
   0227 B5            [ 4]  712 	or	a, l
   0228 28 65         [12]  713 	jr	Z,00109$
                     022A   714 	C$console.c$127$1_1$94	= .
                            715 	.globl	C$console.c$127$1_1$94
                            716 ;console.c:127: int r = n % base;
   022A E5            [11]  717 	push	hl
   022B C5            [11]  718 	push	bc
   022C DD 5E 08      [19]  719 	ld	e, 8 (ix)
   022F DD 56 09      [19]  720 	ld	d, 9 (ix)
   0232 D5            [11]  721 	push	de
   0233 E5            [11]  722 	push	hl
   0234 CDr00r00      [17]  723 	call	__modsint
   0237 F1            [10]  724 	pop	af
   0238 F1            [10]  725 	pop	af
   0239 EB            [ 4]  726 	ex	de,hl
   023A C1            [10]  727 	pop	bc
   023B E1            [10]  728 	pop	hl
                     023C   729 	C$console.c$130$1_1$94	= .
                            730 	.globl	C$console.c$130$1_1$94
                            731 ;console.c:130: buffer[i++] = 65 + (r - 10);
   023C DD 73 FD      [19]  732 	ld	-3 (ix), e
                     023F   733 	C$console.c$129$2_1$97	= .
                            734 	.globl	C$console.c$129$2_1$97
                            735 ;console.c:129: if (r >= 10) {
   023F 7B            [ 4]  736 	ld	a, e
   0240 D6 0A         [ 7]  737 	sub	a, #0x0a
   0242 7A            [ 4]  738 	ld	a, d
   0243 17            [ 4]  739 	rla
   0244 3F            [ 4]  740 	ccf
   0245 1F            [ 4]  741 	rra
   0246 DE 80         [ 7]  742 	sbc	a, #0x80
   0248 38 1B         [12]  743 	jr	C,00105$
                     024A   744 	C$console.c$130$3_1$98	= .
                            745 	.globl	C$console.c$130$3_1$98
                            746 ;console.c:130: buffer[i++] = 65 + (r - 10);
   024A C5            [11]  747 	push	bc
   024B FD E1         [14]  748 	pop	iy
   024D DD 4E FE      [19]  749 	ld	c, -2 (ix)
   0250 DD 46 FF      [19]  750 	ld	b, -1 (ix)
   0253 DD 5E 06      [19]  751 	ld	e, 6 (ix)
   0256 DD 56 07      [19]  752 	ld	d, 7 (ix)
   0259 FD 19         [15]  753 	add	iy, de
   025B DD 7E FD      [19]  754 	ld	a, -3 (ix)
   025E C6 37         [ 7]  755 	add	a, #0x37
   0260 FD 77 00      [19]  756 	ld	0 (iy), a
   0263 18 19         [12]  757 	jr	00106$
   0265                     758 00105$:
                     0265   759 	C$console.c$133$3_1$99	= .
                            760 	.globl	C$console.c$133$3_1$99
                            761 ;console.c:133: buffer[i++] = 48 + r;
   0265 C5            [11]  762 	push	bc
   0266 FD E1         [14]  763 	pop	iy
   0268 DD 4E FE      [19]  764 	ld	c, -2 (ix)
   026B DD 46 FF      [19]  765 	ld	b, -1 (ix)
   026E DD 5E 06      [19]  766 	ld	e, 6 (ix)
   0271 DD 56 07      [19]  767 	ld	d, 7 (ix)
   0274 FD 19         [15]  768 	add	iy, de
   0276 DD 7E FD      [19]  769 	ld	a, -3 (ix)
   0279 C6 30         [ 7]  770 	add	a, #0x30
   027B FD 77 00      [19]  771 	ld	0 (iy), a
   027E                     772 00106$:
                     027E   773 	C$console.c$136$1_1$94	= .
                            774 	.globl	C$console.c$136$1_1$94
                            775 ;console.c:136: n = n / base;
   027E C5            [11]  776 	push	bc
   027F DD 5E 08      [19]  777 	ld	e, 8 (ix)
   0282 DD 56 09      [19]  778 	ld	d, 9 (ix)
   0285 D5            [11]  779 	push	de
   0286 E5            [11]  780 	push	hl
   0287 CDr00r00      [17]  781 	call	__divsint
   028A F1            [10]  782 	pop	af
   028B F1            [10]  783 	pop	af
   028C C1            [10]  784 	pop	bc
   028D 18 8B         [12]  785 	jr	00107$
   028F                     786 00109$:
                     028F   787 	C$console.c$140$1_1$96	= .
                            788 	.globl	C$console.c$140$1_1$96
                            789 ;console.c:140: if (i == 0) {
   028F 78            [ 4]  790 	ld	a, b
   0290 B1            [ 4]  791 	or	a, c
   0291 20 11         [12]  792 	jr	NZ,00111$
                     0293   793 	C$console.c$141$2_1$100	= .
                            794 	.globl	C$console.c$141$2_1$100
                            795 ;console.c:141: buffer[i++] = '0';
   0293 59            [ 4]  796 	ld	e, c
   0294 50            [ 4]  797 	ld	d, b
   0295 DD 4E FE      [19]  798 	ld	c, -2 (ix)
   0298 DD 46 FF      [19]  799 	ld	b, -1 (ix)
   029B DD 6E 06      [19]  800 	ld	l, 6 (ix)
   029E DD 66 07      [19]  801 	ld	h, 7 (ix)
   02A1 19            [11]  802 	add	hl, de
   02A2 36 30         [10]  803 	ld	(hl), #0x30
   02A4                     804 00111$:
                     02A4   805 	C$console.c$147$1_1$96	= .
                            806 	.globl	C$console.c$147$1_1$96
                            807 ;console.c:147: if (value < 0 && base == 10) {
   02A4 DD CB 05 7E   [20]  808 	bit	7, 5 (ix)
   02A8 28 16         [12]  809 	jr	Z,00113$
   02AA DD 7E 08      [19]  810 	ld	a, 8 (ix)
   02AD D6 0A         [ 7]  811 	sub	a, #0x0a
   02AF DD B6 09      [19]  812 	or	a, 9 (ix)
   02B2 20 0C         [12]  813 	jr	NZ,00113$
                     02B4   814 	C$console.c$148$2_1$101	= .
                            815 	.globl	C$console.c$148$2_1$101
                            816 ;console.c:148: buffer[i++] = '-';
   02B4 59            [ 4]  817 	ld	e, c
   02B5 50            [ 4]  818 	ld	d, b
   02B6 03            [ 6]  819 	inc	bc
   02B7 DD 6E 06      [19]  820 	ld	l, 6 (ix)
   02BA DD 66 07      [19]  821 	ld	h, 7 (ix)
   02BD 19            [11]  822 	add	hl, de
   02BE 36 2D         [10]  823 	ld	(hl), #0x2d
   02C0                     824 00113$:
                     02C0   825 	C$console.c$151$1_1$96	= .
                            826 	.globl	C$console.c$151$1_1$96
                            827 ;console.c:151: buffer[i] = '\0'; // null terminate string
   02C0 DD 6E 06      [19]  828 	ld	l, 6 (ix)
   02C3 DD 66 07      [19]  829 	ld	h, 7 (ix)
   02C6 09            [11]  830 	add	hl, bc
   02C7 36 00         [10]  831 	ld	(hl), #0x00
                     02C9   832 	C$console.c$153$1_1$96	= .
                            833 	.globl	C$console.c$153$1_1$96
                            834 ;console.c:153: n = strlen(buffer);
   02C9 C5            [11]  835 	push	bc
   02CA DD 6E 06      [19]  836 	ld	l, 6 (ix)
   02CD DD 66 07      [19]  837 	ld	h, 7 (ix)
   02D0 E5            [11]  838 	push	hl
   02D1 CDr00r00      [17]  839 	call	_strlen
   02D4 F1            [10]  840 	pop	af
   02D5 C1            [10]  841 	pop	bc
                     02D6   842 	C$console.c$154$1_1$96	= .
                            843 	.globl	C$console.c$154$1_1$96
                            844 ;console.c:154: switch(n)
   02D6 7D            [ 4]  845 	ld	a, l
   02D7 3D            [ 4]  846 	dec	a
   02D8 B4            [ 4]  847 	or	a, h
   02D9 28 08         [12]  848 	jr	Z,00115$
   02DB 7D            [ 4]  849 	ld	a, l
   02DC D6 02         [ 7]  850 	sub	a, #0x02
   02DE B4            [ 4]  851 	or	a, h
   02DF 28 18         [12]  852 	jr	Z,00116$
   02E1 18 29         [12]  853 	jr	00118$
                     02E3   854 	C$console.c$156$2_1$102	= .
                            855 	.globl	C$console.c$156$2_1$102
                            856 ;console.c:156: case 1:
   02E3                     857 00115$:
                     02E3   858 	C$console.c$157$2_1$102	= .
                            859 	.globl	C$console.c$157$2_1$102
                            860 ;console.c:157: strcat(buffer,"  ");
   02E3 C5            [11]  861 	push	bc
   02E4 21r24r03      [10]  862 	ld	hl, #___str_0
   02E7 E5            [11]  863 	push	hl
   02E8 DD 6E 06      [19]  864 	ld	l, 6 (ix)
   02EB DD 66 07      [19]  865 	ld	h, 7 (ix)
   02EE E5            [11]  866 	push	hl
   02EF CDr00r00      [17]  867 	call	_strcat
   02F2 F1            [10]  868 	pop	af
   02F3 F1            [10]  869 	pop	af
   02F4 C1            [10]  870 	pop	bc
                     02F5   871 	C$console.c$158$2_1$102	= .
                            872 	.globl	C$console.c$158$2_1$102
                            873 ;console.c:158: i += 2;
   02F5 03            [ 6]  874 	inc	bc
   02F6 03            [ 6]  875 	inc	bc
                     02F7   876 	C$console.c$159$2_1$102	= .
                            877 	.globl	C$console.c$159$2_1$102
                            878 ;console.c:159: break;
   02F7 18 13         [12]  879 	jr	00118$
                     02F9   880 	C$console.c$160$2_1$102	= .
                            881 	.globl	C$console.c$160$2_1$102
                            882 ;console.c:160: case 2:
   02F9                     883 00116$:
                     02F9   884 	C$console.c$161$2_1$102	= .
                            885 	.globl	C$console.c$161$2_1$102
                            886 ;console.c:161: strcat(buffer," ");
   02F9 C5            [11]  887 	push	bc
   02FA 21r27r03      [10]  888 	ld	hl, #___str_1
   02FD E5            [11]  889 	push	hl
   02FE DD 6E 06      [19]  890 	ld	l, 6 (ix)
   0301 DD 66 07      [19]  891 	ld	h, 7 (ix)
   0304 E5            [11]  892 	push	hl
   0305 CDr00r00      [17]  893 	call	_strcat
   0308 F1            [10]  894 	pop	af
   0309 F1            [10]  895 	pop	af
   030A C1            [10]  896 	pop	bc
                     030B   897 	C$console.c$162$2_1$102	= .
                            898 	.globl	C$console.c$162$2_1$102
                            899 ;console.c:162: i += 1;
   030B 03            [ 6]  900 	inc	bc
                     030C   901 	C$console.c$166$1_1$96	= .
                            902 	.globl	C$console.c$166$1_1$96
                            903 ;console.c:166: }
   030C                     904 00118$:
                     030C   905 	C$console.c$168$1_1$96	= .
                            906 	.globl	C$console.c$168$1_1$96
                            907 ;console.c:168: return reverse(buffer, 0, i - 1);
   030C 0B            [ 6]  908 	dec	bc
   030D C5            [11]  909 	push	bc
   030E 21 00 00      [10]  910 	ld	hl, #0x0000
   0311 E5            [11]  911 	push	hl
   0312 DD 6E 06      [19]  912 	ld	l, 6 (ix)
   0315 DD 66 07      [19]  913 	ld	h, 7 (ix)
   0318 E5            [11]  914 	push	hl
   0319 CDr80r01      [17]  915 	call	_reverse
   031C F1            [10]  916 	pop	af
   031D F1            [10]  917 	pop	af
   031E F1            [10]  918 	pop	af
   031F                     919 00119$:
                     031F   920 	C$console.c$169$1_1$94	= .
                            921 	.globl	C$console.c$169$1_1$94
                            922 ;console.c:169: }
   031F DD F9         [10]  923 	ld	sp, ix
   0321 DD E1         [14]  924 	pop	ix
                     0323   925 	C$console.c$169$1_1$94	= .
                            926 	.globl	C$console.c$169$1_1$94
                     0323   927 	XG$con_itoa$0$0	= .
                            928 	.globl	XG$con_itoa$0$0
   0323 C9            [10]  929 	ret
                     0324   930 Fconsole$__str_0$0_0$0 == .
   0324                     931 ___str_0:
   0324 20 20               932 	.ascii "  "
   0326 00                  933 	.db 0x00
                     0327   934 Fconsole$__str_1$0_0$0 == .
   0327                     935 ___str_1:
   0327 20                  936 	.ascii " "
   0328 00                  937 	.db 0x00
                     0329   938 	G$con_print_timer$0$0	= .
                            939 	.globl	G$con_print_timer$0$0
                     0329   940 	C$console.c$171$1_1$103	= .
                            941 	.globl	C$console.c$171$1_1$103
                            942 ;console.c:171: void con_print_timer()
                            943 ;	---------------------------------
                            944 ; Function con_print_timer
                            945 ; ---------------------------------
   0329                     946 _con_print_timer::
   0329 21 D8 FF      [10]  947 	ld	hl, #-40
   032C 39            [11]  948 	add	hl, sp
   032D F9            [ 6]  949 	ld	sp, hl
                     032E   950 	C$console.c$175$1_0$103	= .
                            951 	.globl	C$console.c$175$1_0$103
                            952 ;console.c:175: con_gotoxy(34,10);
   032E 11 22 0A      [10]  953 	ld	de, #0x0a22
   0331 D5            [11]  954 	push	de
   0332 CDr39r00      [17]  955 	call	_con_gotoxy
   0335 F1            [10]  956 	pop	af
                     0336   957 	C$console.c$176$1_0$103	= .
                            958 	.globl	C$console.c$176$1_0$103
                            959 ;console.c:176: con_itoa(con_timer_ms, msg, 10);
   0336 21 00 00      [10]  960 	ld	hl, #0x0000
   0339 39            [11]  961 	add	hl, sp
   033A EB            [ 4]  962 	ex	de, hl
   033B 4B            [ 4]  963 	ld	c, e
   033C 42            [ 4]  964 	ld	b, d
   033D D5            [11]  965 	push	de
   033E 21 0A 00      [10]  966 	ld	hl, #0x000a
   0341 E5            [11]  967 	push	hl
   0342 C5            [11]  968 	push	bc
   0343 2Ar06r00      [16]  969 	ld	hl, (_con_timer_ms)
   0346 E5            [11]  970 	push	hl
   0347 CDrD8r01      [17]  971 	call	_con_itoa
   034A 21 06 00      [10]  972 	ld	hl, #6
   034D 39            [11]  973 	add	hl, sp
   034E F9            [ 6]  974 	ld	sp, hl
   034F CDrBBr00      [17]  975 	call	_con_puts
   0352 F1            [10]  976 	pop	af
                     0353   977 	C$console.c$178$1_0$103	= .
                            978 	.globl	C$console.c$178$1_0$103
                            979 ;console.c:178: }   
   0353 21 28 00      [10]  980 	ld	hl, #40
   0356 39            [11]  981 	add	hl, sp
   0357 F9            [ 6]  982 	ld	sp, hl
                     0358   983 	C$console.c$178$1_0$103	= .
                            984 	.globl	C$console.c$178$1_0$103
                     0358   985 	XG$con_print_timer$0$0	= .
                            986 	.globl	XG$con_print_timer$0$0
   0358 C9            [10]  987 	ret
                            988 	.area _CODE
                            989 	.area _INITIALIZER
                            990 	.area _CABS (ABS)
